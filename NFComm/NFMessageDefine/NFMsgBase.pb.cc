// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NFMsgBase.proto

#include "NFMsgBase.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace NFMsg {
class IdentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ident>
      _instance;
} _Ident_default_instance_;
class Vector2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vector2>
      _instance;
} _Vector2_default_instance_;
class Vector3DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Vector3>
      _instance;
} _Vector3_default_instance_;
class PropertyIntDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PropertyInt>
      _instance;
} _PropertyInt_default_instance_;
class PropertyFloatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PropertyFloat>
      _instance;
} _PropertyFloat_default_instance_;
class PropertyStringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PropertyString>
      _instance;
} _PropertyString_default_instance_;
class PropertyObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PropertyObject>
      _instance;
} _PropertyObject_default_instance_;
class PropertyVector2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PropertyVector2>
      _instance;
} _PropertyVector2_default_instance_;
class PropertyVector3DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PropertyVector3>
      _instance;
} _PropertyVector3_default_instance_;
class RecordIntDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecordInt>
      _instance;
} _RecordInt_default_instance_;
class RecordFloatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecordFloat>
      _instance;
} _RecordFloat_default_instance_;
class RecordStringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecordString>
      _instance;
} _RecordString_default_instance_;
class RecordObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecordObject>
      _instance;
} _RecordObject_default_instance_;
class RecordVector2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecordVector2>
      _instance;
} _RecordVector2_default_instance_;
class RecordVector3DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecordVector3>
      _instance;
} _RecordVector3_default_instance_;
class RecordAddRowStructDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecordAddRowStruct>
      _instance;
} _RecordAddRowStruct_default_instance_;
class ObjectRecordBaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectRecordBase>
      _instance;
} _ObjectRecordBase_default_instance_;
class ObjectPropertyIntDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectPropertyInt>
      _instance;
} _ObjectPropertyInt_default_instance_;
class ObjectPropertyFloatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectPropertyFloat>
      _instance;
} _ObjectPropertyFloat_default_instance_;
class ObjectPropertyStringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectPropertyString>
      _instance;
} _ObjectPropertyString_default_instance_;
class ObjectPropertyObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectPropertyObject>
      _instance;
} _ObjectPropertyObject_default_instance_;
class ObjectPropertyVector2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectPropertyVector2>
      _instance;
} _ObjectPropertyVector2_default_instance_;
class ObjectPropertyVector3DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectPropertyVector3>
      _instance;
} _ObjectPropertyVector3_default_instance_;
class ObjectRecordIntDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectRecordInt>
      _instance;
} _ObjectRecordInt_default_instance_;
class ObjectRecordFloatDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectRecordFloat>
      _instance;
} _ObjectRecordFloat_default_instance_;
class ObjectRecordStringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectRecordString>
      _instance;
} _ObjectRecordString_default_instance_;
class ObjectRecordObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectRecordObject>
      _instance;
} _ObjectRecordObject_default_instance_;
class ObjectRecordVector2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectRecordVector2>
      _instance;
} _ObjectRecordVector2_default_instance_;
class ObjectRecordVector3DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectRecordVector3>
      _instance;
} _ObjectRecordVector3_default_instance_;
class ObjectRecordSwapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectRecordSwap>
      _instance;
} _ObjectRecordSwap_default_instance_;
class ObjectRecordAddRowDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectRecordAddRow>
      _instance;
} _ObjectRecordAddRow_default_instance_;
class ObjectRecordRemoveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectRecordRemove>
      _instance;
} _ObjectRecordRemove_default_instance_;
class ObjectPropertyListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectPropertyList>
      _instance;
} _ObjectPropertyList_default_instance_;
class MultiObjectPropertyListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MultiObjectPropertyList>
      _instance;
} _MultiObjectPropertyList_default_instance_;
class ObjectRecordListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectRecordList>
      _instance;
} _ObjectRecordList_default_instance_;
class MultiObjectRecordListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MultiObjectRecordList>
      _instance;
} _MultiObjectRecordList_default_instance_;
class MsgBaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgBase>
      _instance;
} _MsgBase_default_instance_;
class ReqAckLagTestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqAckLagTest>
      _instance;
} _ReqAckLagTest_default_instance_;
class ReqCommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReqCommand>
      _instance;
} _ReqCommand_default_instance_;
}  // namespace NFMsg
namespace protobuf_NFMsgBase_2eproto {
void InitDefaultsIdentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::NFMsg::_Ident_default_instance_;
    new (ptr) ::NFMsg::Ident();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::Ident::InitAsDefaultInstance();
}

void InitDefaultsIdent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIdentImpl);
}

void InitDefaultsVector2Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::NFMsg::_Vector2_default_instance_;
    new (ptr) ::NFMsg::Vector2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::Vector2::InitAsDefaultInstance();
}

void InitDefaultsVector2() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVector2Impl);
}

void InitDefaultsVector3Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::NFMsg::_Vector3_default_instance_;
    new (ptr) ::NFMsg::Vector3();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::Vector3::InitAsDefaultInstance();
}

void InitDefaultsVector3() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVector3Impl);
}

void InitDefaultsPropertyIntImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::NFMsg::_PropertyInt_default_instance_;
    new (ptr) ::NFMsg::PropertyInt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::PropertyInt::InitAsDefaultInstance();
}

void InitDefaultsPropertyInt() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPropertyIntImpl);
}

void InitDefaultsPropertyFloatImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::NFMsg::_PropertyFloat_default_instance_;
    new (ptr) ::NFMsg::PropertyFloat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::PropertyFloat::InitAsDefaultInstance();
}

void InitDefaultsPropertyFloat() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPropertyFloatImpl);
}

void InitDefaultsPropertyStringImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::NFMsg::_PropertyString_default_instance_;
    new (ptr) ::NFMsg::PropertyString();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::PropertyString::InitAsDefaultInstance();
}

void InitDefaultsPropertyString() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPropertyStringImpl);
}

void InitDefaultsPropertyObjectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  {
    void* ptr = &::NFMsg::_PropertyObject_default_instance_;
    new (ptr) ::NFMsg::PropertyObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::PropertyObject::InitAsDefaultInstance();
}

void InitDefaultsPropertyObject() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPropertyObjectImpl);
}

void InitDefaultsPropertyVector2Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsVector2();
  {
    void* ptr = &::NFMsg::_PropertyVector2_default_instance_;
    new (ptr) ::NFMsg::PropertyVector2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::PropertyVector2::InitAsDefaultInstance();
}

void InitDefaultsPropertyVector2() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPropertyVector2Impl);
}

void InitDefaultsPropertyVector3Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsVector3();
  {
    void* ptr = &::NFMsg::_PropertyVector3_default_instance_;
    new (ptr) ::NFMsg::PropertyVector3();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::PropertyVector3::InitAsDefaultInstance();
}

void InitDefaultsPropertyVector3() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPropertyVector3Impl);
}

void InitDefaultsRecordIntImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::NFMsg::_RecordInt_default_instance_;
    new (ptr) ::NFMsg::RecordInt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::RecordInt::InitAsDefaultInstance();
}

void InitDefaultsRecordInt() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRecordIntImpl);
}

void InitDefaultsRecordFloatImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::NFMsg::_RecordFloat_default_instance_;
    new (ptr) ::NFMsg::RecordFloat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::RecordFloat::InitAsDefaultInstance();
}

void InitDefaultsRecordFloat() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRecordFloatImpl);
}

void InitDefaultsRecordStringImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::NFMsg::_RecordString_default_instance_;
    new (ptr) ::NFMsg::RecordString();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::RecordString::InitAsDefaultInstance();
}

void InitDefaultsRecordString() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRecordStringImpl);
}

void InitDefaultsRecordObjectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  {
    void* ptr = &::NFMsg::_RecordObject_default_instance_;
    new (ptr) ::NFMsg::RecordObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::RecordObject::InitAsDefaultInstance();
}

void InitDefaultsRecordObject() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRecordObjectImpl);
}

void InitDefaultsRecordVector2Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsVector2();
  {
    void* ptr = &::NFMsg::_RecordVector2_default_instance_;
    new (ptr) ::NFMsg::RecordVector2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::RecordVector2::InitAsDefaultInstance();
}

void InitDefaultsRecordVector2() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRecordVector2Impl);
}

void InitDefaultsRecordVector3Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsVector3();
  {
    void* ptr = &::NFMsg::_RecordVector3_default_instance_;
    new (ptr) ::NFMsg::RecordVector3();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::RecordVector3::InitAsDefaultInstance();
}

void InitDefaultsRecordVector3() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRecordVector3Impl);
}

void InitDefaultsRecordAddRowStructImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsRecordInt();
  protobuf_NFMsgBase_2eproto::InitDefaultsRecordFloat();
  protobuf_NFMsgBase_2eproto::InitDefaultsRecordString();
  protobuf_NFMsgBase_2eproto::InitDefaultsRecordObject();
  protobuf_NFMsgBase_2eproto::InitDefaultsRecordVector2();
  protobuf_NFMsgBase_2eproto::InitDefaultsRecordVector3();
  {
    void* ptr = &::NFMsg::_RecordAddRowStruct_default_instance_;
    new (ptr) ::NFMsg::RecordAddRowStruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::RecordAddRowStruct::InitAsDefaultInstance();
}

void InitDefaultsRecordAddRowStruct() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRecordAddRowStructImpl);
}

void InitDefaultsObjectRecordBaseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsRecordAddRowStruct();
  {
    void* ptr = &::NFMsg::_ObjectRecordBase_default_instance_;
    new (ptr) ::NFMsg::ObjectRecordBase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::ObjectRecordBase::InitAsDefaultInstance();
}

void InitDefaultsObjectRecordBase() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectRecordBaseImpl);
}

void InitDefaultsObjectPropertyIntImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  protobuf_NFMsgBase_2eproto::InitDefaultsPropertyInt();
  {
    void* ptr = &::NFMsg::_ObjectPropertyInt_default_instance_;
    new (ptr) ::NFMsg::ObjectPropertyInt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::ObjectPropertyInt::InitAsDefaultInstance();
}

void InitDefaultsObjectPropertyInt() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectPropertyIntImpl);
}

void InitDefaultsObjectPropertyFloatImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  protobuf_NFMsgBase_2eproto::InitDefaultsPropertyFloat();
  {
    void* ptr = &::NFMsg::_ObjectPropertyFloat_default_instance_;
    new (ptr) ::NFMsg::ObjectPropertyFloat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::ObjectPropertyFloat::InitAsDefaultInstance();
}

void InitDefaultsObjectPropertyFloat() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectPropertyFloatImpl);
}

void InitDefaultsObjectPropertyStringImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  protobuf_NFMsgBase_2eproto::InitDefaultsPropertyString();
  {
    void* ptr = &::NFMsg::_ObjectPropertyString_default_instance_;
    new (ptr) ::NFMsg::ObjectPropertyString();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::ObjectPropertyString::InitAsDefaultInstance();
}

void InitDefaultsObjectPropertyString() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectPropertyStringImpl);
}

void InitDefaultsObjectPropertyObjectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  protobuf_NFMsgBase_2eproto::InitDefaultsPropertyObject();
  {
    void* ptr = &::NFMsg::_ObjectPropertyObject_default_instance_;
    new (ptr) ::NFMsg::ObjectPropertyObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::ObjectPropertyObject::InitAsDefaultInstance();
}

void InitDefaultsObjectPropertyObject() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectPropertyObjectImpl);
}

void InitDefaultsObjectPropertyVector2Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  protobuf_NFMsgBase_2eproto::InitDefaultsPropertyVector2();
  {
    void* ptr = &::NFMsg::_ObjectPropertyVector2_default_instance_;
    new (ptr) ::NFMsg::ObjectPropertyVector2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::ObjectPropertyVector2::InitAsDefaultInstance();
}

void InitDefaultsObjectPropertyVector2() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectPropertyVector2Impl);
}

void InitDefaultsObjectPropertyVector3Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  protobuf_NFMsgBase_2eproto::InitDefaultsPropertyVector3();
  {
    void* ptr = &::NFMsg::_ObjectPropertyVector3_default_instance_;
    new (ptr) ::NFMsg::ObjectPropertyVector3();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::ObjectPropertyVector3::InitAsDefaultInstance();
}

void InitDefaultsObjectPropertyVector3() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectPropertyVector3Impl);
}

void InitDefaultsObjectRecordIntImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  protobuf_NFMsgBase_2eproto::InitDefaultsRecordInt();
  {
    void* ptr = &::NFMsg::_ObjectRecordInt_default_instance_;
    new (ptr) ::NFMsg::ObjectRecordInt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::ObjectRecordInt::InitAsDefaultInstance();
}

void InitDefaultsObjectRecordInt() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectRecordIntImpl);
}

void InitDefaultsObjectRecordFloatImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  protobuf_NFMsgBase_2eproto::InitDefaultsRecordFloat();
  {
    void* ptr = &::NFMsg::_ObjectRecordFloat_default_instance_;
    new (ptr) ::NFMsg::ObjectRecordFloat();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::ObjectRecordFloat::InitAsDefaultInstance();
}

void InitDefaultsObjectRecordFloat() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectRecordFloatImpl);
}

void InitDefaultsObjectRecordStringImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  protobuf_NFMsgBase_2eproto::InitDefaultsRecordString();
  {
    void* ptr = &::NFMsg::_ObjectRecordString_default_instance_;
    new (ptr) ::NFMsg::ObjectRecordString();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::ObjectRecordString::InitAsDefaultInstance();
}

void InitDefaultsObjectRecordString() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectRecordStringImpl);
}

void InitDefaultsObjectRecordObjectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  protobuf_NFMsgBase_2eproto::InitDefaultsRecordObject();
  {
    void* ptr = &::NFMsg::_ObjectRecordObject_default_instance_;
    new (ptr) ::NFMsg::ObjectRecordObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::ObjectRecordObject::InitAsDefaultInstance();
}

void InitDefaultsObjectRecordObject() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectRecordObjectImpl);
}

void InitDefaultsObjectRecordVector2Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  protobuf_NFMsgBase_2eproto::InitDefaultsRecordVector2();
  {
    void* ptr = &::NFMsg::_ObjectRecordVector2_default_instance_;
    new (ptr) ::NFMsg::ObjectRecordVector2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::ObjectRecordVector2::InitAsDefaultInstance();
}

void InitDefaultsObjectRecordVector2() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectRecordVector2Impl);
}

void InitDefaultsObjectRecordVector3Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  protobuf_NFMsgBase_2eproto::InitDefaultsRecordVector3();
  {
    void* ptr = &::NFMsg::_ObjectRecordVector3_default_instance_;
    new (ptr) ::NFMsg::ObjectRecordVector3();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::ObjectRecordVector3::InitAsDefaultInstance();
}

void InitDefaultsObjectRecordVector3() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectRecordVector3Impl);
}

void InitDefaultsObjectRecordSwapImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  {
    void* ptr = &::NFMsg::_ObjectRecordSwap_default_instance_;
    new (ptr) ::NFMsg::ObjectRecordSwap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::ObjectRecordSwap::InitAsDefaultInstance();
}

void InitDefaultsObjectRecordSwap() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectRecordSwapImpl);
}

void InitDefaultsObjectRecordAddRowImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  protobuf_NFMsgBase_2eproto::InitDefaultsRecordAddRowStruct();
  {
    void* ptr = &::NFMsg::_ObjectRecordAddRow_default_instance_;
    new (ptr) ::NFMsg::ObjectRecordAddRow();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::ObjectRecordAddRow::InitAsDefaultInstance();
}

void InitDefaultsObjectRecordAddRow() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectRecordAddRowImpl);
}

void InitDefaultsObjectRecordRemoveImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  {
    void* ptr = &::NFMsg::_ObjectRecordRemove_default_instance_;
    new (ptr) ::NFMsg::ObjectRecordRemove();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::ObjectRecordRemove::InitAsDefaultInstance();
}

void InitDefaultsObjectRecordRemove() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectRecordRemoveImpl);
}

void InitDefaultsObjectPropertyListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  protobuf_NFMsgBase_2eproto::InitDefaultsPropertyInt();
  protobuf_NFMsgBase_2eproto::InitDefaultsPropertyFloat();
  protobuf_NFMsgBase_2eproto::InitDefaultsPropertyString();
  protobuf_NFMsgBase_2eproto::InitDefaultsPropertyObject();
  protobuf_NFMsgBase_2eproto::InitDefaultsPropertyVector2();
  protobuf_NFMsgBase_2eproto::InitDefaultsPropertyVector3();
  {
    void* ptr = &::NFMsg::_ObjectPropertyList_default_instance_;
    new (ptr) ::NFMsg::ObjectPropertyList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::ObjectPropertyList::InitAsDefaultInstance();
}

void InitDefaultsObjectPropertyList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectPropertyListImpl);
}

void InitDefaultsMultiObjectPropertyListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsObjectPropertyList();
  {
    void* ptr = &::NFMsg::_MultiObjectPropertyList_default_instance_;
    new (ptr) ::NFMsg::MultiObjectPropertyList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::MultiObjectPropertyList::InitAsDefaultInstance();
}

void InitDefaultsMultiObjectPropertyList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMultiObjectPropertyListImpl);
}

void InitDefaultsObjectRecordListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordBase();
  {
    void* ptr = &::NFMsg::_ObjectRecordList_default_instance_;
    new (ptr) ::NFMsg::ObjectRecordList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::ObjectRecordList::InitAsDefaultInstance();
}

void InitDefaultsObjectRecordList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsObjectRecordListImpl);
}

void InitDefaultsMultiObjectRecordListImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordList();
  {
    void* ptr = &::NFMsg::_MultiObjectRecordList_default_instance_;
    new (ptr) ::NFMsg::MultiObjectRecordList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::MultiObjectRecordList::InitAsDefaultInstance();
}

void InitDefaultsMultiObjectRecordList() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMultiObjectRecordListImpl);
}

void InitDefaultsMsgBaseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  {
    void* ptr = &::NFMsg::_MsgBase_default_instance_;
    new (ptr) ::NFMsg::MsgBase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::MsgBase::InitAsDefaultInstance();
}

void InitDefaultsMsgBase() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMsgBaseImpl);
}

void InitDefaultsReqAckLagTestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::NFMsg::_ReqAckLagTest_default_instance_;
    new (ptr) ::NFMsg::ReqAckLagTest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::ReqAckLagTest::InitAsDefaultInstance();
}

void InitDefaultsReqAckLagTest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReqAckLagTestImpl);
}

void InitDefaultsReqCommandImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  {
    void* ptr = &::NFMsg::_ReqCommand_default_instance_;
    new (ptr) ::NFMsg::ReqCommand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::NFMsg::ReqCommand::InitAsDefaultInstance();
}

void InitDefaultsReqCommand() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsReqCommandImpl);
}

::google::protobuf::Metadata file_level_metadata[39];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::Ident, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::Ident, svrid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::Ident, index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::Vector2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::Vector2, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::Vector2, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::Vector3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::Vector3, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::Vector3, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::Vector3, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyInt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyInt, property_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyInt, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyInt, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyFloat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyFloat, property_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyFloat, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyFloat, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyString, property_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyString, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyString, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyObject, property_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyObject, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyObject, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyVector2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyVector2, property_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyVector2, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyVector2, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyVector3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyVector3, property_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyVector3, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::PropertyVector3, reason_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordInt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordInt, row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordInt, col_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordInt, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordFloat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordFloat, row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordFloat, col_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordFloat, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordString, row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordString, col_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordString, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordObject, row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordObject, col_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordObject, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordVector2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordVector2, row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordVector2, col_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordVector2, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordVector3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordVector3, row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordVector3, col_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordVector3, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordAddRowStruct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordAddRowStruct, row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordAddRowStruct, record_int_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordAddRowStruct, record_float_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordAddRowStruct, record_string_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordAddRowStruct, record_object_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordAddRowStruct, record_vector2_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::RecordAddRowStruct, record_vector3_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordBase, record_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordBase, row_struct_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyInt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyInt, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyInt, property_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyFloat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyFloat, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyFloat, property_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyString, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyString, property_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyObject, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyObject, property_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyVector2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyVector2, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyVector2, property_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyVector3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyVector3, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyVector3, property_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordInt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordInt, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordInt, record_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordInt, property_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordFloat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordFloat, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordFloat, record_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordFloat, property_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordString, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordString, record_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordString, property_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordObject, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordObject, record_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordObject, property_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordVector2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordVector2, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordVector2, record_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordVector2, property_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordVector3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordVector3, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordVector3, record_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordVector3, property_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordSwap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordSwap, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordSwap, origin_record_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordSwap, target_record_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordSwap, row_origin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordSwap, row_target_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordAddRow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordAddRow, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordAddRow, record_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordAddRow, row_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordRemove, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordRemove, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordRemove, record_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordRemove, remove_row_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyList, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyList, property_int_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyList, property_float_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyList, property_string_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyList, property_object_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyList, property_vector2_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectPropertyList, property_vector3_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::MultiObjectPropertyList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::MultiObjectPropertyList, multi_player_property_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordList, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ObjectRecordList, record_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::MultiObjectRecordList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::MultiObjectRecordList, multi_player_record_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::MsgBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::MsgBase, player_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::MsgBase, msg_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::MsgBase, player_client_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::MsgBase, hash_ident_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ReqAckLagTest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ReqAckLagTest, index_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ReqCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ReqCommand, control_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ReqCommand, command_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ReqCommand, command_str_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ReqCommand, command_value_int_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ReqCommand, command_value_float_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ReqCommand, command_value_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ReqCommand, command_value_object_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ReqCommand, row_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::NFMsg::ReqCommand, col_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::NFMsg::Ident)},
  { 7, -1, sizeof(::NFMsg::Vector2)},
  { 14, -1, sizeof(::NFMsg::Vector3)},
  { 22, -1, sizeof(::NFMsg::PropertyInt)},
  { 30, -1, sizeof(::NFMsg::PropertyFloat)},
  { 38, -1, sizeof(::NFMsg::PropertyString)},
  { 46, -1, sizeof(::NFMsg::PropertyObject)},
  { 54, -1, sizeof(::NFMsg::PropertyVector2)},
  { 62, -1, sizeof(::NFMsg::PropertyVector3)},
  { 70, -1, sizeof(::NFMsg::RecordInt)},
  { 78, -1, sizeof(::NFMsg::RecordFloat)},
  { 86, -1, sizeof(::NFMsg::RecordString)},
  { 94, -1, sizeof(::NFMsg::RecordObject)},
  { 102, -1, sizeof(::NFMsg::RecordVector2)},
  { 110, -1, sizeof(::NFMsg::RecordVector3)},
  { 118, -1, sizeof(::NFMsg::RecordAddRowStruct)},
  { 130, -1, sizeof(::NFMsg::ObjectRecordBase)},
  { 137, -1, sizeof(::NFMsg::ObjectPropertyInt)},
  { 144, -1, sizeof(::NFMsg::ObjectPropertyFloat)},
  { 151, -1, sizeof(::NFMsg::ObjectPropertyString)},
  { 158, -1, sizeof(::NFMsg::ObjectPropertyObject)},
  { 165, -1, sizeof(::NFMsg::ObjectPropertyVector2)},
  { 172, -1, sizeof(::NFMsg::ObjectPropertyVector3)},
  { 179, -1, sizeof(::NFMsg::ObjectRecordInt)},
  { 187, -1, sizeof(::NFMsg::ObjectRecordFloat)},
  { 195, -1, sizeof(::NFMsg::ObjectRecordString)},
  { 203, -1, sizeof(::NFMsg::ObjectRecordObject)},
  { 211, -1, sizeof(::NFMsg::ObjectRecordVector2)},
  { 219, -1, sizeof(::NFMsg::ObjectRecordVector3)},
  { 227, -1, sizeof(::NFMsg::ObjectRecordSwap)},
  { 237, -1, sizeof(::NFMsg::ObjectRecordAddRow)},
  { 245, -1, sizeof(::NFMsg::ObjectRecordRemove)},
  { 253, -1, sizeof(::NFMsg::ObjectPropertyList)},
  { 265, -1, sizeof(::NFMsg::MultiObjectPropertyList)},
  { 271, -1, sizeof(::NFMsg::ObjectRecordList)},
  { 278, -1, sizeof(::NFMsg::MultiObjectRecordList)},
  { 284, -1, sizeof(::NFMsg::MsgBase)},
  { 293, -1, sizeof(::NFMsg::ReqAckLagTest)},
  { 299, -1, sizeof(::NFMsg::ReqCommand)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_Ident_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_Vector2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_Vector3_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_PropertyInt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_PropertyFloat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_PropertyString_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_PropertyObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_PropertyVector2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_PropertyVector3_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_RecordInt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_RecordFloat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_RecordString_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_RecordObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_RecordVector2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_RecordVector3_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_RecordAddRowStruct_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_ObjectRecordBase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_ObjectPropertyInt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_ObjectPropertyFloat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_ObjectPropertyString_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_ObjectPropertyObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_ObjectPropertyVector2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_ObjectPropertyVector3_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_ObjectRecordInt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_ObjectRecordFloat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_ObjectRecordString_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_ObjectRecordObject_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_ObjectRecordVector2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_ObjectRecordVector3_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_ObjectRecordSwap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_ObjectRecordAddRow_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_ObjectRecordRemove_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_ObjectPropertyList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_MultiObjectPropertyList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_ObjectRecordList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_MultiObjectRecordList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_MsgBase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_ReqAckLagTest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::NFMsg::_ReqCommand_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "NFMsgBase.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 39);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017NFMsgBase.proto\022\005NFMsg\"%\n\005Ident\022\r\n\005svr"
      "id\030\001 \001(\003\022\r\n\005index\030\002 \001(\003\"\037\n\007Vector2\022\t\n\001x\030"
      "\001 \001(\002\022\t\n\001y\030\002 \001(\002\"*\n\007Vector3\022\t\n\001x\030\001 \001(\002\022\t"
      "\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\"B\n\013PropertyInt\022\025\n\rp"
      "roperty_name\030\001 \001(\014\022\014\n\004data\030\002 \001(\003\022\016\n\006reas"
      "on\030\003 \001(\003\"D\n\rPropertyFloat\022\025\n\rproperty_na"
      "me\030\001 \001(\014\022\014\n\004data\030\002 \001(\002\022\016\n\006reason\030\003 \001(\003\"E"
      "\n\016PropertyString\022\025\n\rproperty_name\030\001 \001(\014\022"
      "\014\n\004data\030\002 \001(\014\022\016\n\006reason\030\003 \001(\003\"S\n\016Propert"
      "yObject\022\025\n\rproperty_name\030\001 \001(\014\022\032\n\004data\030\002"
      " \001(\0132\014.NFMsg.Ident\022\016\n\006reason\030\003 \001(\003\"V\n\017Pr"
      "opertyVector2\022\025\n\rproperty_name\030\001 \001(\014\022\034\n\004"
      "data\030\002 \001(\0132\016.NFMsg.Vector2\022\016\n\006reason\030\003 \001"
      "(\003\"V\n\017PropertyVector3\022\025\n\rproperty_name\030\001"
      " \001(\014\022\034\n\004data\030\002 \001(\0132\016.NFMsg.Vector3\022\016\n\006re"
      "ason\030\003 \001(\003\"3\n\tRecordInt\022\013\n\003row\030\001 \001(\005\022\013\n\003"
      "col\030\002 \001(\005\022\014\n\004data\030\003 \001(\003\"5\n\013RecordFloat\022\013"
      "\n\003row\030\001 \001(\005\022\013\n\003col\030\002 \001(\005\022\014\n\004data\030\003 \001(\002\"6"
      "\n\014RecordString\022\013\n\003row\030\001 \001(\005\022\013\n\003col\030\002 \001(\005"
      "\022\014\n\004data\030\003 \001(\014\"D\n\014RecordObject\022\013\n\003row\030\001 "
      "\001(\005\022\013\n\003col\030\002 \001(\005\022\032\n\004data\030\003 \001(\0132\014.NFMsg.I"
      "dent\"G\n\rRecordVector2\022\013\n\003row\030\001 \001(\005\022\013\n\003co"
      "l\030\002 \001(\005\022\034\n\004data\030\003 \001(\0132\016.NFMsg.Vector2\"G\n"
      "\rRecordVector3\022\013\n\003row\030\001 \001(\005\022\013\n\003col\030\002 \001(\005"
      "\022\034\n\004data\030\003 \001(\0132\016.NFMsg.Vector3\"\303\002\n\022Recor"
      "dAddRowStruct\022\013\n\003row\030\001 \001(\005\022)\n\017record_int"
      "_list\030\002 \003(\0132\020.NFMsg.RecordInt\022-\n\021record_"
      "float_list\030\003 \003(\0132\022.NFMsg.RecordFloat\022/\n\022"
      "record_string_list\030\004 \003(\0132\023.NFMsg.RecordS"
      "tring\022/\n\022record_object_list\030\005 \003(\0132\023.NFMs"
      "g.RecordObject\0221\n\023record_vector2_list\030\006 "
      "\003(\0132\024.NFMsg.RecordVector2\0221\n\023record_vect"
      "or3_list\030\007 \003(\0132\024.NFMsg.RecordVector3\"V\n\020"
      "ObjectRecordBase\022\023\n\013record_name\030\001 \001(\014\022-\n"
      "\nrow_struct\030\002 \003(\0132\031.NFMsg.RecordAddRowSt"
      "ruct\"_\n\021ObjectPropertyInt\022\037\n\tplayer_id\030\001"
      " \001(\0132\014.NFMsg.Ident\022)\n\rproperty_list\030\002 \003("
      "\0132\022.NFMsg.PropertyInt\"c\n\023ObjectPropertyF"
      "loat\022\037\n\tplayer_id\030\001 \001(\0132\014.NFMsg.Ident\022+\n"
      "\rproperty_list\030\002 \003(\0132\024.NFMsg.PropertyFlo"
      "at\"e\n\024ObjectPropertyString\022\037\n\tplayer_id\030"
      "\001 \001(\0132\014.NFMsg.Ident\022,\n\rproperty_list\030\002 \003"
      "(\0132\025.NFMsg.PropertyString\"e\n\024ObjectPrope"
      "rtyObject\022\037\n\tplayer_id\030\001 \001(\0132\014.NFMsg.Ide"
      "nt\022,\n\rproperty_list\030\002 \003(\0132\025.NFMsg.Proper"
      "tyObject\"g\n\025ObjectPropertyVector2\022\037\n\tpla"
      "yer_id\030\001 \001(\0132\014.NFMsg.Ident\022-\n\rproperty_l"
      "ist\030\002 \003(\0132\026.NFMsg.PropertyVector2\"g\n\025Obj"
      "ectPropertyVector3\022\037\n\tplayer_id\030\001 \001(\0132\014."
      "NFMsg.Ident\022-\n\rproperty_list\030\002 \003(\0132\026.NFM"
      "sg.PropertyVector3\"p\n\017ObjectRecordInt\022\037\n"
      "\tplayer_id\030\001 \001(\0132\014.NFMsg.Ident\022\023\n\013record"
      "_name\030\002 \001(\014\022\'\n\rproperty_list\030\003 \003(\0132\020.NFM"
      "sg.RecordInt\"t\n\021ObjectRecordFloat\022\037\n\tpla"
      "yer_id\030\001 \001(\0132\014.NFMsg.Ident\022\023\n\013record_nam"
      "e\030\002 \001(\014\022)\n\rproperty_list\030\003 \003(\0132\022.NFMsg.R"
      "ecordFloat\"v\n\022ObjectRecordString\022\037\n\tplay"
      "er_id\030\001 \001(\0132\014.NFMsg.Ident\022\023\n\013record_name"
      "\030\002 \001(\014\022*\n\rproperty_list\030\003 \003(\0132\023.NFMsg.Re"
      "cordString\"v\n\022ObjectRecordObject\022\037\n\tplay"
      "er_id\030\001 \001(\0132\014.NFMsg.Ident\022\023\n\013record_name"
      "\030\002 \001(\014\022*\n\rproperty_list\030\003 \003(\0132\023.NFMsg.Re"
      "cordObject\"x\n\023ObjectRecordVector2\022\037\n\tpla"
      "yer_id\030\001 \001(\0132\014.NFMsg.Ident\022\023\n\013record_nam"
      "e\030\002 \001(\014\022+\n\rproperty_list\030\003 \003(\0132\024.NFMsg.R"
      "ecordVector2\"x\n\023ObjectRecordVector3\022\037\n\tp"
      "layer_id\030\001 \001(\0132\014.NFMsg.Ident\022\023\n\013record_n"
      "ame\030\002 \001(\014\022+\n\rproperty_list\030\003 \003(\0132\024.NFMsg"
      ".RecordVector3\"\223\001\n\020ObjectRecordSwap\022\037\n\tp"
      "layer_id\030\001 \001(\0132\014.NFMsg.Ident\022\032\n\022origin_r"
      "ecord_name\030\002 \001(\014\022\032\n\022target_record_name\030\003"
      " \001(\014\022\022\n\nrow_origin\030\004 \001(\005\022\022\n\nrow_target\030\005"
      " \001(\005\"w\n\022ObjectRecordAddRow\022\037\n\tplayer_id\030"
      "\001 \001(\0132\014.NFMsg.Ident\022\023\n\013record_name\030\002 \001(\014"
      "\022+\n\010row_data\030\003 \003(\0132\031.NFMsg.RecordAddRowS"
      "truct\"^\n\022ObjectRecordRemove\022\037\n\tplayer_id"
      "\030\001 \001(\0132\014.NFMsg.Ident\022\023\n\013record_name\030\002 \001("
      "\014\022\022\n\nremove_row\030\003 \003(\005\"\357\002\n\022ObjectProperty"
      "List\022\037\n\tplayer_id\030\001 \001(\0132\014.NFMsg.Ident\022-\n"
      "\021property_int_list\030\002 \003(\0132\022.NFMsg.Propert"
      "yInt\0221\n\023property_float_list\030\003 \003(\0132\024.NFMs"
      "g.PropertyFloat\0223\n\024property_string_list\030"
      "\004 \003(\0132\025.NFMsg.PropertyString\0223\n\024property"
      "_object_list\030\005 \003(\0132\025.NFMsg.PropertyObjec"
      "t\0225\n\025property_vector2_list\030\006 \003(\0132\026.NFMsg"
      ".PropertyVector2\0225\n\025property_vector3_lis"
      "t\030\007 \003(\0132\026.NFMsg.PropertyVector3\"S\n\027Multi"
      "ObjectPropertyList\0228\n\025multi_player_prope"
      "rty\030\001 \003(\0132\031.NFMsg.ObjectPropertyList\"a\n\020"
      "ObjectRecordList\022\037\n\tplayer_id\030\001 \001(\0132\014.NF"
      "Msg.Ident\022,\n\013record_list\030\002 \003(\0132\027.NFMsg.O"
      "bjectRecordBase\"M\n\025MultiObjectRecordList"
      "\0224\n\023multi_player_record\030\001 \003(\0132\027.NFMsg.Ob"
      "jectRecordList\"\210\001\n\007MsgBase\022\037\n\tplayer_id\030"
      "\001 \001(\0132\014.NFMsg.Ident\022\020\n\010msg_data\030\002 \001(\014\022(\n"
      "\022player_Client_list\030\003 \003(\0132\014.NFMsg.Ident\022"
      " \n\nhash_ident\030\004 \001(\0132\014.NFMsg.Ident\"\036\n\rReq"
      "AckLagTest\022\r\n\005index\030\001 \001(\005\"\213\003\n\nReqCommand"
      "\022 \n\ncontrol_id\030\001 \001(\0132\014.NFMsg.Ident\0226\n\nco"
      "mmand_id\030\002 \001(\0162\".NFMsg.ReqCommand.EGameC"
      "ommandType\022\031\n\021command_str_value\030\003 \001(\014\022\031\n"
      "\021command_value_int\030\004 \001(\003\022\033\n\023command_valu"
      "e_float\030\005 \001(\001\022\031\n\021command_value_str\030\006 \001(\014"
      "\022*\n\024command_value_object\030\007 \001(\0132\014.NFMsg.I"
      "dent\022\013\n\003row\030\010 \001(\005\022\013\n\003col\030\t \001(\005\"o\n\020EGameC"
      "ommandType\022\027\n\023EGCT_MODIY_PROPERTY\020\000\022\023\n\017E"
      "GCT_MODIY_ITEM\020\001\022\026\n\022EGCT_CREATE_OBJECT\020\002"
      "\022\025\n\021EGCT_ADD_ROLE_EXP\020\003b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4311);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "NFMsgBase.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_NFMsgBase_2eproto
namespace NFMsg {
const ::google::protobuf::EnumDescriptor* ReqCommand_EGameCommandType_descriptor() {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_NFMsgBase_2eproto::file_level_enum_descriptors[0];
}
bool ReqCommand_EGameCommandType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ReqCommand_EGameCommandType ReqCommand::EGCT_MODIY_PROPERTY;
const ReqCommand_EGameCommandType ReqCommand::EGCT_MODIY_ITEM;
const ReqCommand_EGameCommandType ReqCommand::EGCT_CREATE_OBJECT;
const ReqCommand_EGameCommandType ReqCommand::EGCT_ADD_ROLE_EXP;
const ReqCommand_EGameCommandType ReqCommand::EGameCommandType_MIN;
const ReqCommand_EGameCommandType ReqCommand::EGameCommandType_MAX;
const int ReqCommand::EGameCommandType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Ident::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ident::kSvridFieldNumber;
const int Ident::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ident::Ident()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.Ident)
}
Ident::Ident(const Ident& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&svrid_, &from.svrid_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&svrid_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.Ident)
}

void Ident::SharedCtor() {
  ::memset(&svrid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&svrid_)) + sizeof(index_));
  _cached_size_ = 0;
}

Ident::~Ident() {
  // @@protoc_insertion_point(destructor:NFMsg.Ident)
  SharedDtor();
}

void Ident::SharedDtor() {
}

void Ident::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Ident::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ident& Ident::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsIdent();
  return *internal_default_instance();
}

Ident* Ident::New(::google::protobuf::Arena* arena) const {
  Ident* n = new Ident;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Ident::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.Ident)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&svrid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&svrid_)) + sizeof(index_));
  _internal_metadata_.Clear();
}

bool Ident::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.Ident)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 svrid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &svrid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.Ident)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.Ident)
  return false;
#undef DO_
}

void Ident::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.Ident)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 svrid = 1;
  if (this->svrid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->svrid(), output);
  }

  // int64 index = 2;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.Ident)
}

::google::protobuf::uint8* Ident::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.Ident)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 svrid = 1;
  if (this->svrid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->svrid(), target);
  }

  // int64 index = 2;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.Ident)
  return target;
}

size_t Ident::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.Ident)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 svrid = 1;
  if (this->svrid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->svrid());
  }

  // int64 index = 2;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Ident::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.Ident)
  GOOGLE_DCHECK_NE(&from, this);
  const Ident* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ident>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.Ident)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.Ident)
    MergeFrom(*source);
  }
}

void Ident::MergeFrom(const Ident& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.Ident)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.svrid() != 0) {
    set_svrid(from.svrid());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void Ident::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.Ident)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ident::CopyFrom(const Ident& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.Ident)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ident::IsInitialized() const {
  return true;
}

void Ident::Swap(Ident* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ident::InternalSwap(Ident* other) {
  using std::swap;
  swap(svrid_, other->svrid_);
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Ident::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vector2::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector2::kXFieldNumber;
const int Vector2::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector2::Vector2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsVector2();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.Vector2)
}
Vector2::Vector2(const Vector2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.Vector2)
}

void Vector2::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _cached_size_ = 0;
}

Vector2::~Vector2() {
  // @@protoc_insertion_point(destructor:NFMsg.Vector2)
  SharedDtor();
}

void Vector2::SharedDtor() {
}

void Vector2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector2::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector2& Vector2::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsVector2();
  return *internal_default_instance();
}

Vector2* Vector2::New(::google::protobuf::Arena* arena) const {
  Vector2* n = new Vector2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector2::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.Vector2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool Vector2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.Vector2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.Vector2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.Vector2)
  return false;
#undef DO_
}

void Vector2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.Vector2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.Vector2)
}

::google::protobuf::uint8* Vector2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.Vector2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.Vector2)
  return target;
}

size_t Vector2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.Vector2)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vector2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.Vector2)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.Vector2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.Vector2)
    MergeFrom(*source);
  }
}

void Vector2::MergeFrom(const Vector2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.Vector2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Vector2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.Vector2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector2::CopyFrom(const Vector2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.Vector2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector2::IsInitialized() const {
  return true;
}

void Vector2::Swap(Vector2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector2::InternalSwap(Vector2* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Vector2::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Vector3::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector3::kXFieldNumber;
const int Vector3::kYFieldNumber;
const int Vector3::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector3::Vector3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsVector3();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.Vector3)
}
Vector3::Vector3(const Vector3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.Vector3)
}

void Vector3::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _cached_size_ = 0;
}

Vector3::~Vector3() {
  // @@protoc_insertion_point(destructor:NFMsg.Vector3)
  SharedDtor();
}

void Vector3::SharedDtor() {
}

void Vector3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector3::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Vector3& Vector3::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsVector3();
  return *internal_default_instance();
}

Vector3* Vector3::New(::google::protobuf::Arena* arena) const {
  Vector3* n = new Vector3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector3::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.Vector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Vector3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.Vector3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.Vector3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.Vector3)
  return false;
#undef DO_
}

void Vector3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.Vector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.Vector3)
}

::google::protobuf::uint8* Vector3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.Vector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.Vector3)
  return target;
}

size_t Vector3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.Vector3)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vector3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.Vector3)
  GOOGLE_DCHECK_NE(&from, this);
  const Vector3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.Vector3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.Vector3)
    MergeFrom(*source);
  }
}

void Vector3::MergeFrom(const Vector3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.Vector3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Vector3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.Vector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector3::CopyFrom(const Vector3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.Vector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector3::IsInitialized() const {
  return true;
}

void Vector3::Swap(Vector3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector3::InternalSwap(Vector3* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Vector3::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PropertyInt::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PropertyInt::kPropertyNameFieldNumber;
const int PropertyInt::kDataFieldNumber;
const int PropertyInt::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PropertyInt::PropertyInt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsPropertyInt();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.PropertyInt)
}
PropertyInt::PropertyInt(const PropertyInt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  property_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.property_name().size() > 0) {
    property_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_name_);
  }
  ::memcpy(&data_, &from.data_,
    static_cast<size_t>(reinterpret_cast<char*>(&reason_) -
    reinterpret_cast<char*>(&data_)) + sizeof(reason_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.PropertyInt)
}

void PropertyInt::SharedCtor() {
  property_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&data_)) + sizeof(reason_));
  _cached_size_ = 0;
}

PropertyInt::~PropertyInt() {
  // @@protoc_insertion_point(destructor:NFMsg.PropertyInt)
  SharedDtor();
}

void PropertyInt::SharedDtor() {
  property_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PropertyInt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PropertyInt::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PropertyInt& PropertyInt::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsPropertyInt();
  return *internal_default_instance();
}

PropertyInt* PropertyInt::New(::google::protobuf::Arena* arena) const {
  PropertyInt* n = new PropertyInt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PropertyInt::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.PropertyInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&data_)) + sizeof(reason_));
  _internal_metadata_.Clear();
}

bool PropertyInt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.PropertyInt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes property_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_property_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 reason = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.PropertyInt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.PropertyInt)
  return false;
#undef DO_
}

void PropertyInt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.PropertyInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes property_name = 1;
  if (this->property_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->property_name(), output);
  }

  // int64 data = 2;
  if (this->data() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->data(), output);
  }

  // int64 reason = 3;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.PropertyInt)
}

::google::protobuf::uint8* PropertyInt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.PropertyInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes property_name = 1;
  if (this->property_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->property_name(), target);
  }

  // int64 data = 2;
  if (this->data() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->data(), target);
  }

  // int64 reason = 3;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.PropertyInt)
  return target;
}

size_t PropertyInt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.PropertyInt)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes property_name = 1;
  if (this->property_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->property_name());
  }

  // int64 data = 2;
  if (this->data() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->data());
  }

  // int64 reason = 3;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PropertyInt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.PropertyInt)
  GOOGLE_DCHECK_NE(&from, this);
  const PropertyInt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PropertyInt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.PropertyInt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.PropertyInt)
    MergeFrom(*source);
  }
}

void PropertyInt::MergeFrom(const PropertyInt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.PropertyInt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.property_name().size() > 0) {

    property_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_name_);
  }
  if (from.data() != 0) {
    set_data(from.data());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void PropertyInt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.PropertyInt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropertyInt::CopyFrom(const PropertyInt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.PropertyInt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropertyInt::IsInitialized() const {
  return true;
}

void PropertyInt::Swap(PropertyInt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PropertyInt::InternalSwap(PropertyInt* other) {
  using std::swap;
  property_name_.Swap(&other->property_name_);
  swap(data_, other->data_);
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PropertyInt::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PropertyFloat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PropertyFloat::kPropertyNameFieldNumber;
const int PropertyFloat::kDataFieldNumber;
const int PropertyFloat::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PropertyFloat::PropertyFloat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsPropertyFloat();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.PropertyFloat)
}
PropertyFloat::PropertyFloat(const PropertyFloat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  property_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.property_name().size() > 0) {
    property_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_name_);
  }
  ::memcpy(&reason_, &from.reason_,
    static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&reason_)) + sizeof(data_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.PropertyFloat)
}

void PropertyFloat::SharedCtor() {
  property_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&reason_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&reason_)) + sizeof(data_));
  _cached_size_ = 0;
}

PropertyFloat::~PropertyFloat() {
  // @@protoc_insertion_point(destructor:NFMsg.PropertyFloat)
  SharedDtor();
}

void PropertyFloat::SharedDtor() {
  property_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PropertyFloat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PropertyFloat::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PropertyFloat& PropertyFloat::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsPropertyFloat();
  return *internal_default_instance();
}

PropertyFloat* PropertyFloat::New(::google::protobuf::Arena* arena) const {
  PropertyFloat* n = new PropertyFloat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PropertyFloat::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.PropertyFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&reason_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&reason_)) + sizeof(data_));
  _internal_metadata_.Clear();
}

bool PropertyFloat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.PropertyFloat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes property_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_property_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 reason = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.PropertyFloat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.PropertyFloat)
  return false;
#undef DO_
}

void PropertyFloat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.PropertyFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes property_name = 1;
  if (this->property_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->property_name(), output);
  }

  // float data = 2;
  if (this->data() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->data(), output);
  }

  // int64 reason = 3;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.PropertyFloat)
}

::google::protobuf::uint8* PropertyFloat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.PropertyFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes property_name = 1;
  if (this->property_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->property_name(), target);
  }

  // float data = 2;
  if (this->data() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->data(), target);
  }

  // int64 reason = 3;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.PropertyFloat)
  return target;
}

size_t PropertyFloat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.PropertyFloat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes property_name = 1;
  if (this->property_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->property_name());
  }

  // int64 reason = 3;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->reason());
  }

  // float data = 2;
  if (this->data() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PropertyFloat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.PropertyFloat)
  GOOGLE_DCHECK_NE(&from, this);
  const PropertyFloat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PropertyFloat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.PropertyFloat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.PropertyFloat)
    MergeFrom(*source);
  }
}

void PropertyFloat::MergeFrom(const PropertyFloat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.PropertyFloat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.property_name().size() > 0) {

    property_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_name_);
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
  if (from.data() != 0) {
    set_data(from.data());
  }
}

void PropertyFloat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.PropertyFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropertyFloat::CopyFrom(const PropertyFloat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.PropertyFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropertyFloat::IsInitialized() const {
  return true;
}

void PropertyFloat::Swap(PropertyFloat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PropertyFloat::InternalSwap(PropertyFloat* other) {
  using std::swap;
  property_name_.Swap(&other->property_name_);
  swap(reason_, other->reason_);
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PropertyFloat::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PropertyString::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PropertyString::kPropertyNameFieldNumber;
const int PropertyString::kDataFieldNumber;
const int PropertyString::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PropertyString::PropertyString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsPropertyString();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.PropertyString)
}
PropertyString::PropertyString(const PropertyString& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  property_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.property_name().size() > 0) {
    property_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_name_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  reason_ = from.reason_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.PropertyString)
}

void PropertyString::SharedCtor() {
  property_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

PropertyString::~PropertyString() {
  // @@protoc_insertion_point(destructor:NFMsg.PropertyString)
  SharedDtor();
}

void PropertyString::SharedDtor() {
  property_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PropertyString::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PropertyString::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PropertyString& PropertyString::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsPropertyString();
  return *internal_default_instance();
}

PropertyString* PropertyString::New(::google::protobuf::Arena* arena) const {
  PropertyString* n = new PropertyString;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PropertyString::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.PropertyString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool PropertyString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.PropertyString)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes property_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_property_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 reason = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.PropertyString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.PropertyString)
  return false;
#undef DO_
}

void PropertyString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.PropertyString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes property_name = 1;
  if (this->property_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->property_name(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // int64 reason = 3;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.PropertyString)
}

::google::protobuf::uint8* PropertyString::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.PropertyString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes property_name = 1;
  if (this->property_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->property_name(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // int64 reason = 3;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.PropertyString)
  return target;
}

size_t PropertyString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.PropertyString)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes property_name = 1;
  if (this->property_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->property_name());
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // int64 reason = 3;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PropertyString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.PropertyString)
  GOOGLE_DCHECK_NE(&from, this);
  const PropertyString* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PropertyString>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.PropertyString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.PropertyString)
    MergeFrom(*source);
  }
}

void PropertyString::MergeFrom(const PropertyString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.PropertyString)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.property_name().size() > 0) {

    property_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_name_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void PropertyString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.PropertyString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropertyString::CopyFrom(const PropertyString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.PropertyString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropertyString::IsInitialized() const {
  return true;
}

void PropertyString::Swap(PropertyString* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PropertyString::InternalSwap(PropertyString* other) {
  using std::swap;
  property_name_.Swap(&other->property_name_);
  data_.Swap(&other->data_);
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PropertyString::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PropertyObject::InitAsDefaultInstance() {
  ::NFMsg::_PropertyObject_default_instance_._instance.get_mutable()->data_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PropertyObject::kPropertyNameFieldNumber;
const int PropertyObject::kDataFieldNumber;
const int PropertyObject::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PropertyObject::PropertyObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsPropertyObject();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.PropertyObject)
}
PropertyObject::PropertyObject(const PropertyObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  property_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.property_name().size() > 0) {
    property_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_name_);
  }
  if (from.has_data()) {
    data_ = new ::NFMsg::Ident(*from.data_);
  } else {
    data_ = NULL;
  }
  reason_ = from.reason_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.PropertyObject)
}

void PropertyObject::SharedCtor() {
  property_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&data_)) + sizeof(reason_));
  _cached_size_ = 0;
}

PropertyObject::~PropertyObject() {
  // @@protoc_insertion_point(destructor:NFMsg.PropertyObject)
  SharedDtor();
}

void PropertyObject::SharedDtor() {
  property_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void PropertyObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PropertyObject::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PropertyObject& PropertyObject::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsPropertyObject();
  return *internal_default_instance();
}

PropertyObject* PropertyObject::New(::google::protobuf::Arena* arena) const {
  PropertyObject* n = new PropertyObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PropertyObject::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.PropertyObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  reason_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool PropertyObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.PropertyObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes property_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_property_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFMsg.Ident data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 reason = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.PropertyObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.PropertyObject)
  return false;
#undef DO_
}

void PropertyObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.PropertyObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes property_name = 1;
  if (this->property_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->property_name(), output);
  }

  // .NFMsg.Ident data = 2;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_, output);
  }

  // int64 reason = 3;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.PropertyObject)
}

::google::protobuf::uint8* PropertyObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.PropertyObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes property_name = 1;
  if (this->property_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->property_name(), target);
  }

  // .NFMsg.Ident data = 2;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->data_, deterministic, target);
  }

  // int64 reason = 3;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.PropertyObject)
  return target;
}

size_t PropertyObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.PropertyObject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes property_name = 1;
  if (this->property_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->property_name());
  }

  // .NFMsg.Ident data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->data_);
  }

  // int64 reason = 3;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PropertyObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.PropertyObject)
  GOOGLE_DCHECK_NE(&from, this);
  const PropertyObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PropertyObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.PropertyObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.PropertyObject)
    MergeFrom(*source);
  }
}

void PropertyObject::MergeFrom(const PropertyObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.PropertyObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.property_name().size() > 0) {

    property_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_name_);
  }
  if (from.has_data()) {
    mutable_data()->::NFMsg::Ident::MergeFrom(from.data());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void PropertyObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.PropertyObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropertyObject::CopyFrom(const PropertyObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.PropertyObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropertyObject::IsInitialized() const {
  return true;
}

void PropertyObject::Swap(PropertyObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PropertyObject::InternalSwap(PropertyObject* other) {
  using std::swap;
  property_name_.Swap(&other->property_name_);
  swap(data_, other->data_);
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PropertyObject::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PropertyVector2::InitAsDefaultInstance() {
  ::NFMsg::_PropertyVector2_default_instance_._instance.get_mutable()->data_ = const_cast< ::NFMsg::Vector2*>(
      ::NFMsg::Vector2::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PropertyVector2::kPropertyNameFieldNumber;
const int PropertyVector2::kDataFieldNumber;
const int PropertyVector2::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PropertyVector2::PropertyVector2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsPropertyVector2();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.PropertyVector2)
}
PropertyVector2::PropertyVector2(const PropertyVector2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  property_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.property_name().size() > 0) {
    property_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_name_);
  }
  if (from.has_data()) {
    data_ = new ::NFMsg::Vector2(*from.data_);
  } else {
    data_ = NULL;
  }
  reason_ = from.reason_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.PropertyVector2)
}

void PropertyVector2::SharedCtor() {
  property_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&data_)) + sizeof(reason_));
  _cached_size_ = 0;
}

PropertyVector2::~PropertyVector2() {
  // @@protoc_insertion_point(destructor:NFMsg.PropertyVector2)
  SharedDtor();
}

void PropertyVector2::SharedDtor() {
  property_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void PropertyVector2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PropertyVector2::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PropertyVector2& PropertyVector2::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsPropertyVector2();
  return *internal_default_instance();
}

PropertyVector2* PropertyVector2::New(::google::protobuf::Arena* arena) const {
  PropertyVector2* n = new PropertyVector2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PropertyVector2::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.PropertyVector2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  reason_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool PropertyVector2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.PropertyVector2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes property_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_property_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFMsg.Vector2 data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 reason = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.PropertyVector2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.PropertyVector2)
  return false;
#undef DO_
}

void PropertyVector2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.PropertyVector2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes property_name = 1;
  if (this->property_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->property_name(), output);
  }

  // .NFMsg.Vector2 data = 2;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_, output);
  }

  // int64 reason = 3;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.PropertyVector2)
}

::google::protobuf::uint8* PropertyVector2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.PropertyVector2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes property_name = 1;
  if (this->property_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->property_name(), target);
  }

  // .NFMsg.Vector2 data = 2;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->data_, deterministic, target);
  }

  // int64 reason = 3;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.PropertyVector2)
  return target;
}

size_t PropertyVector2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.PropertyVector2)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes property_name = 1;
  if (this->property_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->property_name());
  }

  // .NFMsg.Vector2 data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->data_);
  }

  // int64 reason = 3;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PropertyVector2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.PropertyVector2)
  GOOGLE_DCHECK_NE(&from, this);
  const PropertyVector2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PropertyVector2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.PropertyVector2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.PropertyVector2)
    MergeFrom(*source);
  }
}

void PropertyVector2::MergeFrom(const PropertyVector2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.PropertyVector2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.property_name().size() > 0) {

    property_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_name_);
  }
  if (from.has_data()) {
    mutable_data()->::NFMsg::Vector2::MergeFrom(from.data());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void PropertyVector2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.PropertyVector2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropertyVector2::CopyFrom(const PropertyVector2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.PropertyVector2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropertyVector2::IsInitialized() const {
  return true;
}

void PropertyVector2::Swap(PropertyVector2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PropertyVector2::InternalSwap(PropertyVector2* other) {
  using std::swap;
  property_name_.Swap(&other->property_name_);
  swap(data_, other->data_);
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PropertyVector2::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PropertyVector3::InitAsDefaultInstance() {
  ::NFMsg::_PropertyVector3_default_instance_._instance.get_mutable()->data_ = const_cast< ::NFMsg::Vector3*>(
      ::NFMsg::Vector3::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PropertyVector3::kPropertyNameFieldNumber;
const int PropertyVector3::kDataFieldNumber;
const int PropertyVector3::kReasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PropertyVector3::PropertyVector3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsPropertyVector3();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.PropertyVector3)
}
PropertyVector3::PropertyVector3(const PropertyVector3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  property_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.property_name().size() > 0) {
    property_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_name_);
  }
  if (from.has_data()) {
    data_ = new ::NFMsg::Vector3(*from.data_);
  } else {
    data_ = NULL;
  }
  reason_ = from.reason_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.PropertyVector3)
}

void PropertyVector3::SharedCtor() {
  property_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reason_) -
      reinterpret_cast<char*>(&data_)) + sizeof(reason_));
  _cached_size_ = 0;
}

PropertyVector3::~PropertyVector3() {
  // @@protoc_insertion_point(destructor:NFMsg.PropertyVector3)
  SharedDtor();
}

void PropertyVector3::SharedDtor() {
  property_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void PropertyVector3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PropertyVector3::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PropertyVector3& PropertyVector3::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsPropertyVector3();
  return *internal_default_instance();
}

PropertyVector3* PropertyVector3::New(::google::protobuf::Arena* arena) const {
  PropertyVector3* n = new PropertyVector3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PropertyVector3::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.PropertyVector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  reason_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool PropertyVector3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.PropertyVector3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes property_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_property_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFMsg.Vector3 data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 reason = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &reason_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.PropertyVector3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.PropertyVector3)
  return false;
#undef DO_
}

void PropertyVector3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.PropertyVector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes property_name = 1;
  if (this->property_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->property_name(), output);
  }

  // .NFMsg.Vector3 data = 2;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_, output);
  }

  // int64 reason = 3;
  if (this->reason() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->reason(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.PropertyVector3)
}

::google::protobuf::uint8* PropertyVector3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.PropertyVector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes property_name = 1;
  if (this->property_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->property_name(), target);
  }

  // .NFMsg.Vector3 data = 2;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->data_, deterministic, target);
  }

  // int64 reason = 3;
  if (this->reason() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->reason(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.PropertyVector3)
  return target;
}

size_t PropertyVector3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.PropertyVector3)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes property_name = 1;
  if (this->property_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->property_name());
  }

  // .NFMsg.Vector3 data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->data_);
  }

  // int64 reason = 3;
  if (this->reason() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->reason());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PropertyVector3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.PropertyVector3)
  GOOGLE_DCHECK_NE(&from, this);
  const PropertyVector3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PropertyVector3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.PropertyVector3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.PropertyVector3)
    MergeFrom(*source);
  }
}

void PropertyVector3::MergeFrom(const PropertyVector3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.PropertyVector3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.property_name().size() > 0) {

    property_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.property_name_);
  }
  if (from.has_data()) {
    mutable_data()->::NFMsg::Vector3::MergeFrom(from.data());
  }
  if (from.reason() != 0) {
    set_reason(from.reason());
  }
}

void PropertyVector3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.PropertyVector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PropertyVector3::CopyFrom(const PropertyVector3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.PropertyVector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PropertyVector3::IsInitialized() const {
  return true;
}

void PropertyVector3::Swap(PropertyVector3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PropertyVector3::InternalSwap(PropertyVector3* other) {
  using std::swap;
  property_name_.Swap(&other->property_name_);
  swap(data_, other->data_);
  swap(reason_, other->reason_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PropertyVector3::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecordInt::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecordInt::kRowFieldNumber;
const int RecordInt::kColFieldNumber;
const int RecordInt::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecordInt::RecordInt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsRecordInt();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.RecordInt)
}
RecordInt::RecordInt(const RecordInt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&row_, &from.row_,
    static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&row_)) + sizeof(data_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.RecordInt)
}

void RecordInt::SharedCtor() {
  ::memset(&row_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&row_)) + sizeof(data_));
  _cached_size_ = 0;
}

RecordInt::~RecordInt() {
  // @@protoc_insertion_point(destructor:NFMsg.RecordInt)
  SharedDtor();
}

void RecordInt::SharedDtor() {
}

void RecordInt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecordInt::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecordInt& RecordInt::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsRecordInt();
  return *internal_default_instance();
}

RecordInt* RecordInt::New(::google::protobuf::Arena* arena) const {
  RecordInt* n = new RecordInt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecordInt::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.RecordInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&row_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&row_)) + sizeof(data_));
  _internal_metadata_.Clear();
}

bool RecordInt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.RecordInt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 row = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 col = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &col_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.RecordInt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.RecordInt)
  return false;
#undef DO_
}

void RecordInt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.RecordInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 row = 1;
  if (this->row() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->row(), output);
  }

  // int32 col = 2;
  if (this->col() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->col(), output);
  }

  // int64 data = 3;
  if (this->data() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.RecordInt)
}

::google::protobuf::uint8* RecordInt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.RecordInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 row = 1;
  if (this->row() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->row(), target);
  }

  // int32 col = 2;
  if (this->col() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->col(), target);
  }

  // int64 data = 3;
  if (this->data() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.RecordInt)
  return target;
}

size_t RecordInt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.RecordInt)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 row = 1;
  if (this->row() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row());
  }

  // int32 col = 2;
  if (this->col() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->col());
  }

  // int64 data = 3;
  if (this->data() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecordInt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.RecordInt)
  GOOGLE_DCHECK_NE(&from, this);
  const RecordInt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecordInt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.RecordInt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.RecordInt)
    MergeFrom(*source);
  }
}

void RecordInt::MergeFrom(const RecordInt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.RecordInt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.row() != 0) {
    set_row(from.row());
  }
  if (from.col() != 0) {
    set_col(from.col());
  }
  if (from.data() != 0) {
    set_data(from.data());
  }
}

void RecordInt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.RecordInt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecordInt::CopyFrom(const RecordInt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.RecordInt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecordInt::IsInitialized() const {
  return true;
}

void RecordInt::Swap(RecordInt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecordInt::InternalSwap(RecordInt* other) {
  using std::swap;
  swap(row_, other->row_);
  swap(col_, other->col_);
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecordInt::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecordFloat::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecordFloat::kRowFieldNumber;
const int RecordFloat::kColFieldNumber;
const int RecordFloat::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecordFloat::RecordFloat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsRecordFloat();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.RecordFloat)
}
RecordFloat::RecordFloat(const RecordFloat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&row_, &from.row_,
    static_cast<size_t>(reinterpret_cast<char*>(&data_) -
    reinterpret_cast<char*>(&row_)) + sizeof(data_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.RecordFloat)
}

void RecordFloat::SharedCtor() {
  ::memset(&row_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&row_)) + sizeof(data_));
  _cached_size_ = 0;
}

RecordFloat::~RecordFloat() {
  // @@protoc_insertion_point(destructor:NFMsg.RecordFloat)
  SharedDtor();
}

void RecordFloat::SharedDtor() {
}

void RecordFloat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecordFloat::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecordFloat& RecordFloat::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsRecordFloat();
  return *internal_default_instance();
}

RecordFloat* RecordFloat::New(::google::protobuf::Arena* arena) const {
  RecordFloat* n = new RecordFloat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecordFloat::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.RecordFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&row_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&row_)) + sizeof(data_));
  _internal_metadata_.Clear();
}

bool RecordFloat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.RecordFloat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 row = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 col = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &col_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.RecordFloat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.RecordFloat)
  return false;
#undef DO_
}

void RecordFloat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.RecordFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 row = 1;
  if (this->row() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->row(), output);
  }

  // int32 col = 2;
  if (this->col() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->col(), output);
  }

  // float data = 3;
  if (this->data() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.RecordFloat)
}

::google::protobuf::uint8* RecordFloat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.RecordFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 row = 1;
  if (this->row() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->row(), target);
  }

  // int32 col = 2;
  if (this->col() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->col(), target);
  }

  // float data = 3;
  if (this->data() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.RecordFloat)
  return target;
}

size_t RecordFloat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.RecordFloat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 row = 1;
  if (this->row() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row());
  }

  // int32 col = 2;
  if (this->col() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->col());
  }

  // float data = 3;
  if (this->data() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecordFloat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.RecordFloat)
  GOOGLE_DCHECK_NE(&from, this);
  const RecordFloat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecordFloat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.RecordFloat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.RecordFloat)
    MergeFrom(*source);
  }
}

void RecordFloat::MergeFrom(const RecordFloat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.RecordFloat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.row() != 0) {
    set_row(from.row());
  }
  if (from.col() != 0) {
    set_col(from.col());
  }
  if (from.data() != 0) {
    set_data(from.data());
  }
}

void RecordFloat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.RecordFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecordFloat::CopyFrom(const RecordFloat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.RecordFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecordFloat::IsInitialized() const {
  return true;
}

void RecordFloat::Swap(RecordFloat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecordFloat::InternalSwap(RecordFloat* other) {
  using std::swap;
  swap(row_, other->row_);
  swap(col_, other->col_);
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecordFloat::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecordString::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecordString::kRowFieldNumber;
const int RecordString::kColFieldNumber;
const int RecordString::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecordString::RecordString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsRecordString();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.RecordString)
}
RecordString::RecordString(const RecordString& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&row_, &from.row_,
    static_cast<size_t>(reinterpret_cast<char*>(&col_) -
    reinterpret_cast<char*>(&row_)) + sizeof(col_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.RecordString)
}

void RecordString::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&row_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&col_) -
      reinterpret_cast<char*>(&row_)) + sizeof(col_));
  _cached_size_ = 0;
}

RecordString::~RecordString() {
  // @@protoc_insertion_point(destructor:NFMsg.RecordString)
  SharedDtor();
}

void RecordString::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RecordString::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecordString::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecordString& RecordString::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsRecordString();
  return *internal_default_instance();
}

RecordString* RecordString::New(::google::protobuf::Arena* arena) const {
  RecordString* n = new RecordString;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecordString::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.RecordString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&row_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&col_) -
      reinterpret_cast<char*>(&row_)) + sizeof(col_));
  _internal_metadata_.Clear();
}

bool RecordString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.RecordString)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 row = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 col = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &col_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.RecordString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.RecordString)
  return false;
#undef DO_
}

void RecordString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.RecordString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 row = 1;
  if (this->row() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->row(), output);
  }

  // int32 col = 2;
  if (this->col() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->col(), output);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.RecordString)
}

::google::protobuf::uint8* RecordString::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.RecordString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 row = 1;
  if (this->row() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->row(), target);
  }

  // int32 col = 2;
  if (this->col() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->col(), target);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.RecordString)
  return target;
}

size_t RecordString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.RecordString)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // int32 row = 1;
  if (this->row() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row());
  }

  // int32 col = 2;
  if (this->col() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->col());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecordString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.RecordString)
  GOOGLE_DCHECK_NE(&from, this);
  const RecordString* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecordString>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.RecordString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.RecordString)
    MergeFrom(*source);
  }
}

void RecordString::MergeFrom(const RecordString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.RecordString)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.row() != 0) {
    set_row(from.row());
  }
  if (from.col() != 0) {
    set_col(from.col());
  }
}

void RecordString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.RecordString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecordString::CopyFrom(const RecordString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.RecordString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecordString::IsInitialized() const {
  return true;
}

void RecordString::Swap(RecordString* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecordString::InternalSwap(RecordString* other) {
  using std::swap;
  data_.Swap(&other->data_);
  swap(row_, other->row_);
  swap(col_, other->col_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecordString::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecordObject::InitAsDefaultInstance() {
  ::NFMsg::_RecordObject_default_instance_._instance.get_mutable()->data_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecordObject::kRowFieldNumber;
const int RecordObject::kColFieldNumber;
const int RecordObject::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecordObject::RecordObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsRecordObject();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.RecordObject)
}
RecordObject::RecordObject(const RecordObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::NFMsg::Ident(*from.data_);
  } else {
    data_ = NULL;
  }
  ::memcpy(&row_, &from.row_,
    static_cast<size_t>(reinterpret_cast<char*>(&col_) -
    reinterpret_cast<char*>(&row_)) + sizeof(col_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.RecordObject)
}

void RecordObject::SharedCtor() {
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&col_) -
      reinterpret_cast<char*>(&data_)) + sizeof(col_));
  _cached_size_ = 0;
}

RecordObject::~RecordObject() {
  // @@protoc_insertion_point(destructor:NFMsg.RecordObject)
  SharedDtor();
}

void RecordObject::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void RecordObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecordObject::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecordObject& RecordObject::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsRecordObject();
  return *internal_default_instance();
}

RecordObject* RecordObject::New(::google::protobuf::Arena* arena) const {
  RecordObject* n = new RecordObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecordObject::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.RecordObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  ::memset(&row_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&col_) -
      reinterpret_cast<char*>(&row_)) + sizeof(col_));
  _internal_metadata_.Clear();
}

bool RecordObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.RecordObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 row = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 col = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &col_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFMsg.Ident data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.RecordObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.RecordObject)
  return false;
#undef DO_
}

void RecordObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.RecordObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 row = 1;
  if (this->row() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->row(), output);
  }

  // int32 col = 2;
  if (this->col() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->col(), output);
  }

  // .NFMsg.Ident data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.RecordObject)
}

::google::protobuf::uint8* RecordObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.RecordObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 row = 1;
  if (this->row() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->row(), target);
  }

  // int32 col = 2;
  if (this->col() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->col(), target);
  }

  // .NFMsg.Ident data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.RecordObject)
  return target;
}

size_t RecordObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.RecordObject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NFMsg.Ident data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->data_);
  }

  // int32 row = 1;
  if (this->row() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row());
  }

  // int32 col = 2;
  if (this->col() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->col());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecordObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.RecordObject)
  GOOGLE_DCHECK_NE(&from, this);
  const RecordObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecordObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.RecordObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.RecordObject)
    MergeFrom(*source);
  }
}

void RecordObject::MergeFrom(const RecordObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.RecordObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::NFMsg::Ident::MergeFrom(from.data());
  }
  if (from.row() != 0) {
    set_row(from.row());
  }
  if (from.col() != 0) {
    set_col(from.col());
  }
}

void RecordObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.RecordObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecordObject::CopyFrom(const RecordObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.RecordObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecordObject::IsInitialized() const {
  return true;
}

void RecordObject::Swap(RecordObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecordObject::InternalSwap(RecordObject* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(row_, other->row_);
  swap(col_, other->col_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecordObject::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecordVector2::InitAsDefaultInstance() {
  ::NFMsg::_RecordVector2_default_instance_._instance.get_mutable()->data_ = const_cast< ::NFMsg::Vector2*>(
      ::NFMsg::Vector2::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecordVector2::kRowFieldNumber;
const int RecordVector2::kColFieldNumber;
const int RecordVector2::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecordVector2::RecordVector2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsRecordVector2();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.RecordVector2)
}
RecordVector2::RecordVector2(const RecordVector2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::NFMsg::Vector2(*from.data_);
  } else {
    data_ = NULL;
  }
  ::memcpy(&row_, &from.row_,
    static_cast<size_t>(reinterpret_cast<char*>(&col_) -
    reinterpret_cast<char*>(&row_)) + sizeof(col_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.RecordVector2)
}

void RecordVector2::SharedCtor() {
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&col_) -
      reinterpret_cast<char*>(&data_)) + sizeof(col_));
  _cached_size_ = 0;
}

RecordVector2::~RecordVector2() {
  // @@protoc_insertion_point(destructor:NFMsg.RecordVector2)
  SharedDtor();
}

void RecordVector2::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void RecordVector2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecordVector2::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecordVector2& RecordVector2::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsRecordVector2();
  return *internal_default_instance();
}

RecordVector2* RecordVector2::New(::google::protobuf::Arena* arena) const {
  RecordVector2* n = new RecordVector2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecordVector2::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.RecordVector2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  ::memset(&row_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&col_) -
      reinterpret_cast<char*>(&row_)) + sizeof(col_));
  _internal_metadata_.Clear();
}

bool RecordVector2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.RecordVector2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 row = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 col = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &col_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFMsg.Vector2 data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.RecordVector2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.RecordVector2)
  return false;
#undef DO_
}

void RecordVector2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.RecordVector2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 row = 1;
  if (this->row() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->row(), output);
  }

  // int32 col = 2;
  if (this->col() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->col(), output);
  }

  // .NFMsg.Vector2 data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.RecordVector2)
}

::google::protobuf::uint8* RecordVector2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.RecordVector2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 row = 1;
  if (this->row() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->row(), target);
  }

  // int32 col = 2;
  if (this->col() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->col(), target);
  }

  // .NFMsg.Vector2 data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.RecordVector2)
  return target;
}

size_t RecordVector2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.RecordVector2)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NFMsg.Vector2 data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->data_);
  }

  // int32 row = 1;
  if (this->row() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row());
  }

  // int32 col = 2;
  if (this->col() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->col());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecordVector2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.RecordVector2)
  GOOGLE_DCHECK_NE(&from, this);
  const RecordVector2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecordVector2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.RecordVector2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.RecordVector2)
    MergeFrom(*source);
  }
}

void RecordVector2::MergeFrom(const RecordVector2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.RecordVector2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::NFMsg::Vector2::MergeFrom(from.data());
  }
  if (from.row() != 0) {
    set_row(from.row());
  }
  if (from.col() != 0) {
    set_col(from.col());
  }
}

void RecordVector2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.RecordVector2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecordVector2::CopyFrom(const RecordVector2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.RecordVector2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecordVector2::IsInitialized() const {
  return true;
}

void RecordVector2::Swap(RecordVector2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecordVector2::InternalSwap(RecordVector2* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(row_, other->row_);
  swap(col_, other->col_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecordVector2::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecordVector3::InitAsDefaultInstance() {
  ::NFMsg::_RecordVector3_default_instance_._instance.get_mutable()->data_ = const_cast< ::NFMsg::Vector3*>(
      ::NFMsg::Vector3::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecordVector3::kRowFieldNumber;
const int RecordVector3::kColFieldNumber;
const int RecordVector3::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecordVector3::RecordVector3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsRecordVector3();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.RecordVector3)
}
RecordVector3::RecordVector3(const RecordVector3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::NFMsg::Vector3(*from.data_);
  } else {
    data_ = NULL;
  }
  ::memcpy(&row_, &from.row_,
    static_cast<size_t>(reinterpret_cast<char*>(&col_) -
    reinterpret_cast<char*>(&row_)) + sizeof(col_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.RecordVector3)
}

void RecordVector3::SharedCtor() {
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&col_) -
      reinterpret_cast<char*>(&data_)) + sizeof(col_));
  _cached_size_ = 0;
}

RecordVector3::~RecordVector3() {
  // @@protoc_insertion_point(destructor:NFMsg.RecordVector3)
  SharedDtor();
}

void RecordVector3::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void RecordVector3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecordVector3::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecordVector3& RecordVector3::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsRecordVector3();
  return *internal_default_instance();
}

RecordVector3* RecordVector3::New(::google::protobuf::Arena* arena) const {
  RecordVector3* n = new RecordVector3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecordVector3::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.RecordVector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  ::memset(&row_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&col_) -
      reinterpret_cast<char*>(&row_)) + sizeof(col_));
  _internal_metadata_.Clear();
}

bool RecordVector3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.RecordVector3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 row = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 col = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &col_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFMsg.Vector3 data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.RecordVector3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.RecordVector3)
  return false;
#undef DO_
}

void RecordVector3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.RecordVector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 row = 1;
  if (this->row() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->row(), output);
  }

  // int32 col = 2;
  if (this->col() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->col(), output);
  }

  // .NFMsg.Vector3 data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->data_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.RecordVector3)
}

::google::protobuf::uint8* RecordVector3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.RecordVector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 row = 1;
  if (this->row() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->row(), target);
  }

  // int32 col = 2;
  if (this->col() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->col(), target);
  }

  // .NFMsg.Vector3 data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->data_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.RecordVector3)
  return target;
}

size_t RecordVector3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.RecordVector3)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .NFMsg.Vector3 data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->data_);
  }

  // int32 row = 1;
  if (this->row() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row());
  }

  // int32 col = 2;
  if (this->col() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->col());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecordVector3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.RecordVector3)
  GOOGLE_DCHECK_NE(&from, this);
  const RecordVector3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecordVector3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.RecordVector3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.RecordVector3)
    MergeFrom(*source);
  }
}

void RecordVector3::MergeFrom(const RecordVector3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.RecordVector3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::NFMsg::Vector3::MergeFrom(from.data());
  }
  if (from.row() != 0) {
    set_row(from.row());
  }
  if (from.col() != 0) {
    set_col(from.col());
  }
}

void RecordVector3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.RecordVector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecordVector3::CopyFrom(const RecordVector3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.RecordVector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecordVector3::IsInitialized() const {
  return true;
}

void RecordVector3::Swap(RecordVector3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecordVector3::InternalSwap(RecordVector3* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(row_, other->row_);
  swap(col_, other->col_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecordVector3::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecordAddRowStruct::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecordAddRowStruct::kRowFieldNumber;
const int RecordAddRowStruct::kRecordIntListFieldNumber;
const int RecordAddRowStruct::kRecordFloatListFieldNumber;
const int RecordAddRowStruct::kRecordStringListFieldNumber;
const int RecordAddRowStruct::kRecordObjectListFieldNumber;
const int RecordAddRowStruct::kRecordVector2ListFieldNumber;
const int RecordAddRowStruct::kRecordVector3ListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecordAddRowStruct::RecordAddRowStruct()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsRecordAddRowStruct();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.RecordAddRowStruct)
}
RecordAddRowStruct::RecordAddRowStruct(const RecordAddRowStruct& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      record_int_list_(from.record_int_list_),
      record_float_list_(from.record_float_list_),
      record_string_list_(from.record_string_list_),
      record_object_list_(from.record_object_list_),
      record_vector2_list_(from.record_vector2_list_),
      record_vector3_list_(from.record_vector3_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  row_ = from.row_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.RecordAddRowStruct)
}

void RecordAddRowStruct::SharedCtor() {
  row_ = 0;
  _cached_size_ = 0;
}

RecordAddRowStruct::~RecordAddRowStruct() {
  // @@protoc_insertion_point(destructor:NFMsg.RecordAddRowStruct)
  SharedDtor();
}

void RecordAddRowStruct::SharedDtor() {
}

void RecordAddRowStruct::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RecordAddRowStruct::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecordAddRowStruct& RecordAddRowStruct::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsRecordAddRowStruct();
  return *internal_default_instance();
}

RecordAddRowStruct* RecordAddRowStruct::New(::google::protobuf::Arena* arena) const {
  RecordAddRowStruct* n = new RecordAddRowStruct;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RecordAddRowStruct::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.RecordAddRowStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_int_list_.Clear();
  record_float_list_.Clear();
  record_string_list_.Clear();
  record_object_list_.Clear();
  record_vector2_list_.Clear();
  record_vector3_list_.Clear();
  row_ = 0;
  _internal_metadata_.Clear();
}

bool RecordAddRowStruct::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.RecordAddRowStruct)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 row = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.RecordInt record_int_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_record_int_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.RecordFloat record_float_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_record_float_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.RecordString record_string_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_record_string_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.RecordObject record_object_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_record_object_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.RecordVector2 record_vector2_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_record_vector2_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.RecordVector3 record_vector3_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_record_vector3_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.RecordAddRowStruct)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.RecordAddRowStruct)
  return false;
#undef DO_
}

void RecordAddRowStruct::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.RecordAddRowStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 row = 1;
  if (this->row() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->row(), output);
  }

  // repeated .NFMsg.RecordInt record_int_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_int_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->record_int_list(static_cast<int>(i)), output);
  }

  // repeated .NFMsg.RecordFloat record_float_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_float_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->record_float_list(static_cast<int>(i)), output);
  }

  // repeated .NFMsg.RecordString record_string_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_string_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->record_string_list(static_cast<int>(i)), output);
  }

  // repeated .NFMsg.RecordObject record_object_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_object_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->record_object_list(static_cast<int>(i)), output);
  }

  // repeated .NFMsg.RecordVector2 record_vector2_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_vector2_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->record_vector2_list(static_cast<int>(i)), output);
  }

  // repeated .NFMsg.RecordVector3 record_vector3_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_vector3_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->record_vector3_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.RecordAddRowStruct)
}

::google::protobuf::uint8* RecordAddRowStruct::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.RecordAddRowStruct)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 row = 1;
  if (this->row() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->row(), target);
  }

  // repeated .NFMsg.RecordInt record_int_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_int_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->record_int_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NFMsg.RecordFloat record_float_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_float_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->record_float_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NFMsg.RecordString record_string_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_string_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->record_string_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NFMsg.RecordObject record_object_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_object_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->record_object_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NFMsg.RecordVector2 record_vector2_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_vector2_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->record_vector2_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NFMsg.RecordVector3 record_vector3_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_vector3_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->record_vector3_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.RecordAddRowStruct)
  return target;
}

size_t RecordAddRowStruct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.RecordAddRowStruct)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFMsg.RecordInt record_int_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->record_int_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->record_int_list(static_cast<int>(i)));
    }
  }

  // repeated .NFMsg.RecordFloat record_float_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->record_float_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->record_float_list(static_cast<int>(i)));
    }
  }

  // repeated .NFMsg.RecordString record_string_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->record_string_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->record_string_list(static_cast<int>(i)));
    }
  }

  // repeated .NFMsg.RecordObject record_object_list = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->record_object_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->record_object_list(static_cast<int>(i)));
    }
  }

  // repeated .NFMsg.RecordVector2 record_vector2_list = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->record_vector2_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->record_vector2_list(static_cast<int>(i)));
    }
  }

  // repeated .NFMsg.RecordVector3 record_vector3_list = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->record_vector3_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->record_vector3_list(static_cast<int>(i)));
    }
  }

  // int32 row = 1;
  if (this->row() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RecordAddRowStruct::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.RecordAddRowStruct)
  GOOGLE_DCHECK_NE(&from, this);
  const RecordAddRowStruct* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecordAddRowStruct>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.RecordAddRowStruct)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.RecordAddRowStruct)
    MergeFrom(*source);
  }
}

void RecordAddRowStruct::MergeFrom(const RecordAddRowStruct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.RecordAddRowStruct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  record_int_list_.MergeFrom(from.record_int_list_);
  record_float_list_.MergeFrom(from.record_float_list_);
  record_string_list_.MergeFrom(from.record_string_list_);
  record_object_list_.MergeFrom(from.record_object_list_);
  record_vector2_list_.MergeFrom(from.record_vector2_list_);
  record_vector3_list_.MergeFrom(from.record_vector3_list_);
  if (from.row() != 0) {
    set_row(from.row());
  }
}

void RecordAddRowStruct::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.RecordAddRowStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecordAddRowStruct::CopyFrom(const RecordAddRowStruct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.RecordAddRowStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecordAddRowStruct::IsInitialized() const {
  return true;
}

void RecordAddRowStruct::Swap(RecordAddRowStruct* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecordAddRowStruct::InternalSwap(RecordAddRowStruct* other) {
  using std::swap;
  record_int_list_.InternalSwap(&other->record_int_list_);
  record_float_list_.InternalSwap(&other->record_float_list_);
  record_string_list_.InternalSwap(&other->record_string_list_);
  record_object_list_.InternalSwap(&other->record_object_list_);
  record_vector2_list_.InternalSwap(&other->record_vector2_list_);
  record_vector3_list_.InternalSwap(&other->record_vector3_list_);
  swap(row_, other->row_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RecordAddRowStruct::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectRecordBase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordBase::kRecordNameFieldNumber;
const int ObjectRecordBase::kRowStructFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordBase::ObjectRecordBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordBase();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.ObjectRecordBase)
}
ObjectRecordBase::ObjectRecordBase(const ObjectRecordBase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      row_struct_(from.row_struct_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record_name().size() > 0) {
    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  // @@protoc_insertion_point(copy_constructor:NFMsg.ObjectRecordBase)
}

void ObjectRecordBase::SharedCtor() {
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ObjectRecordBase::~ObjectRecordBase() {
  // @@protoc_insertion_point(destructor:NFMsg.ObjectRecordBase)
  SharedDtor();
}

void ObjectRecordBase::SharedDtor() {
  record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ObjectRecordBase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordBase::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectRecordBase& ObjectRecordBase::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordBase();
  return *internal_default_instance();
}

ObjectRecordBase* ObjectRecordBase::New(::google::protobuf::Arena* arena) const {
  ObjectRecordBase* n = new ObjectRecordBase;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectRecordBase::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.ObjectRecordBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  row_struct_.Clear();
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ObjectRecordBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.ObjectRecordBase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes record_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.RecordAddRowStruct row_struct = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_row_struct()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.ObjectRecordBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.ObjectRecordBase)
  return false;
#undef DO_
}

void ObjectRecordBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.ObjectRecordBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes record_name = 1;
  if (this->record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->record_name(), output);
  }

  // repeated .NFMsg.RecordAddRowStruct row_struct = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->row_struct_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->row_struct(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.ObjectRecordBase)
}

::google::protobuf::uint8* ObjectRecordBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.ObjectRecordBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes record_name = 1;
  if (this->record_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->record_name(), target);
  }

  // repeated .NFMsg.RecordAddRowStruct row_struct = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->row_struct_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->row_struct(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.ObjectRecordBase)
  return target;
}

size_t ObjectRecordBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.ObjectRecordBase)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFMsg.RecordAddRowStruct row_struct = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->row_struct_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->row_struct(static_cast<int>(i)));
    }
  }

  // bytes record_name = 1;
  if (this->record_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.ObjectRecordBase)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectRecordBase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.ObjectRecordBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.ObjectRecordBase)
    MergeFrom(*source);
  }
}

void ObjectRecordBase::MergeFrom(const ObjectRecordBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.ObjectRecordBase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  row_struct_.MergeFrom(from.row_struct_);
  if (from.record_name().size() > 0) {

    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
}

void ObjectRecordBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.ObjectRecordBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordBase::CopyFrom(const ObjectRecordBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.ObjectRecordBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordBase::IsInitialized() const {
  return true;
}

void ObjectRecordBase::Swap(ObjectRecordBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordBase::InternalSwap(ObjectRecordBase* other) {
  using std::swap;
  row_struct_.InternalSwap(&other->row_struct_);
  record_name_.Swap(&other->record_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordBase::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectPropertyInt::InitAsDefaultInstance() {
  ::NFMsg::_ObjectPropertyInt_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectPropertyInt::kPlayerIdFieldNumber;
const int ObjectPropertyInt::kPropertyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectPropertyInt::ObjectPropertyInt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectPropertyInt();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.ObjectPropertyInt)
}
ObjectPropertyInt::ObjectPropertyInt(const ObjectPropertyInt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      property_list_(from.property_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player_id()) {
    player_id_ = new ::NFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFMsg.ObjectPropertyInt)
}

void ObjectPropertyInt::SharedCtor() {
  player_id_ = NULL;
  _cached_size_ = 0;
}

ObjectPropertyInt::~ObjectPropertyInt() {
  // @@protoc_insertion_point(destructor:NFMsg.ObjectPropertyInt)
  SharedDtor();
}

void ObjectPropertyInt::SharedDtor() {
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectPropertyInt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectPropertyInt::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectPropertyInt& ObjectPropertyInt::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectPropertyInt();
  return *internal_default_instance();
}

ObjectPropertyInt* ObjectPropertyInt::New(::google::protobuf::Arena* arena) const {
  ObjectPropertyInt* n = new ObjectPropertyInt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectPropertyInt::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.ObjectPropertyInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_list_.Clear();
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectPropertyInt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.ObjectPropertyInt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.PropertyInt property_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_property_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.ObjectPropertyInt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.ObjectPropertyInt)
  return false;
#undef DO_
}

void ObjectPropertyInt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.ObjectPropertyInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // repeated .NFMsg.PropertyInt property_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->property_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.ObjectPropertyInt)
}

::google::protobuf::uint8* ObjectPropertyInt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.ObjectPropertyInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->player_id_, deterministic, target);
  }

  // repeated .NFMsg.PropertyInt property_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->property_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.ObjectPropertyInt)
  return target;
}

size_t ObjectPropertyInt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.ObjectPropertyInt)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFMsg.PropertyInt property_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->property_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property_list(static_cast<int>(i)));
    }
  }

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->player_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectPropertyInt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.ObjectPropertyInt)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectPropertyInt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectPropertyInt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.ObjectPropertyInt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.ObjectPropertyInt)
    MergeFrom(*source);
  }
}

void ObjectPropertyInt::MergeFrom(const ObjectPropertyInt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.ObjectPropertyInt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  property_list_.MergeFrom(from.property_list_);
  if (from.has_player_id()) {
    mutable_player_id()->::NFMsg::Ident::MergeFrom(from.player_id());
  }
}

void ObjectPropertyInt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.ObjectPropertyInt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectPropertyInt::CopyFrom(const ObjectPropertyInt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.ObjectPropertyInt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectPropertyInt::IsInitialized() const {
  return true;
}

void ObjectPropertyInt::Swap(ObjectPropertyInt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectPropertyInt::InternalSwap(ObjectPropertyInt* other) {
  using std::swap;
  property_list_.InternalSwap(&other->property_list_);
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectPropertyInt::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectPropertyFloat::InitAsDefaultInstance() {
  ::NFMsg::_ObjectPropertyFloat_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectPropertyFloat::kPlayerIdFieldNumber;
const int ObjectPropertyFloat::kPropertyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectPropertyFloat::ObjectPropertyFloat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectPropertyFloat();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.ObjectPropertyFloat)
}
ObjectPropertyFloat::ObjectPropertyFloat(const ObjectPropertyFloat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      property_list_(from.property_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player_id()) {
    player_id_ = new ::NFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFMsg.ObjectPropertyFloat)
}

void ObjectPropertyFloat::SharedCtor() {
  player_id_ = NULL;
  _cached_size_ = 0;
}

ObjectPropertyFloat::~ObjectPropertyFloat() {
  // @@protoc_insertion_point(destructor:NFMsg.ObjectPropertyFloat)
  SharedDtor();
}

void ObjectPropertyFloat::SharedDtor() {
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectPropertyFloat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectPropertyFloat::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectPropertyFloat& ObjectPropertyFloat::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectPropertyFloat();
  return *internal_default_instance();
}

ObjectPropertyFloat* ObjectPropertyFloat::New(::google::protobuf::Arena* arena) const {
  ObjectPropertyFloat* n = new ObjectPropertyFloat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectPropertyFloat::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.ObjectPropertyFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_list_.Clear();
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectPropertyFloat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.ObjectPropertyFloat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.PropertyFloat property_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_property_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.ObjectPropertyFloat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.ObjectPropertyFloat)
  return false;
#undef DO_
}

void ObjectPropertyFloat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.ObjectPropertyFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // repeated .NFMsg.PropertyFloat property_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->property_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.ObjectPropertyFloat)
}

::google::protobuf::uint8* ObjectPropertyFloat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.ObjectPropertyFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->player_id_, deterministic, target);
  }

  // repeated .NFMsg.PropertyFloat property_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->property_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.ObjectPropertyFloat)
  return target;
}

size_t ObjectPropertyFloat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.ObjectPropertyFloat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFMsg.PropertyFloat property_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->property_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property_list(static_cast<int>(i)));
    }
  }

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->player_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectPropertyFloat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.ObjectPropertyFloat)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectPropertyFloat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectPropertyFloat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.ObjectPropertyFloat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.ObjectPropertyFloat)
    MergeFrom(*source);
  }
}

void ObjectPropertyFloat::MergeFrom(const ObjectPropertyFloat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.ObjectPropertyFloat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  property_list_.MergeFrom(from.property_list_);
  if (from.has_player_id()) {
    mutable_player_id()->::NFMsg::Ident::MergeFrom(from.player_id());
  }
}

void ObjectPropertyFloat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.ObjectPropertyFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectPropertyFloat::CopyFrom(const ObjectPropertyFloat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.ObjectPropertyFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectPropertyFloat::IsInitialized() const {
  return true;
}

void ObjectPropertyFloat::Swap(ObjectPropertyFloat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectPropertyFloat::InternalSwap(ObjectPropertyFloat* other) {
  using std::swap;
  property_list_.InternalSwap(&other->property_list_);
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectPropertyFloat::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectPropertyString::InitAsDefaultInstance() {
  ::NFMsg::_ObjectPropertyString_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectPropertyString::kPlayerIdFieldNumber;
const int ObjectPropertyString::kPropertyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectPropertyString::ObjectPropertyString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectPropertyString();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.ObjectPropertyString)
}
ObjectPropertyString::ObjectPropertyString(const ObjectPropertyString& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      property_list_(from.property_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player_id()) {
    player_id_ = new ::NFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFMsg.ObjectPropertyString)
}

void ObjectPropertyString::SharedCtor() {
  player_id_ = NULL;
  _cached_size_ = 0;
}

ObjectPropertyString::~ObjectPropertyString() {
  // @@protoc_insertion_point(destructor:NFMsg.ObjectPropertyString)
  SharedDtor();
}

void ObjectPropertyString::SharedDtor() {
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectPropertyString::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectPropertyString::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectPropertyString& ObjectPropertyString::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectPropertyString();
  return *internal_default_instance();
}

ObjectPropertyString* ObjectPropertyString::New(::google::protobuf::Arena* arena) const {
  ObjectPropertyString* n = new ObjectPropertyString;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectPropertyString::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.ObjectPropertyString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_list_.Clear();
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectPropertyString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.ObjectPropertyString)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.PropertyString property_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_property_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.ObjectPropertyString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.ObjectPropertyString)
  return false;
#undef DO_
}

void ObjectPropertyString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.ObjectPropertyString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // repeated .NFMsg.PropertyString property_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->property_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.ObjectPropertyString)
}

::google::protobuf::uint8* ObjectPropertyString::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.ObjectPropertyString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->player_id_, deterministic, target);
  }

  // repeated .NFMsg.PropertyString property_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->property_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.ObjectPropertyString)
  return target;
}

size_t ObjectPropertyString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.ObjectPropertyString)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFMsg.PropertyString property_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->property_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property_list(static_cast<int>(i)));
    }
  }

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->player_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectPropertyString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.ObjectPropertyString)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectPropertyString* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectPropertyString>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.ObjectPropertyString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.ObjectPropertyString)
    MergeFrom(*source);
  }
}

void ObjectPropertyString::MergeFrom(const ObjectPropertyString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.ObjectPropertyString)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  property_list_.MergeFrom(from.property_list_);
  if (from.has_player_id()) {
    mutable_player_id()->::NFMsg::Ident::MergeFrom(from.player_id());
  }
}

void ObjectPropertyString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.ObjectPropertyString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectPropertyString::CopyFrom(const ObjectPropertyString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.ObjectPropertyString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectPropertyString::IsInitialized() const {
  return true;
}

void ObjectPropertyString::Swap(ObjectPropertyString* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectPropertyString::InternalSwap(ObjectPropertyString* other) {
  using std::swap;
  property_list_.InternalSwap(&other->property_list_);
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectPropertyString::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectPropertyObject::InitAsDefaultInstance() {
  ::NFMsg::_ObjectPropertyObject_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectPropertyObject::kPlayerIdFieldNumber;
const int ObjectPropertyObject::kPropertyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectPropertyObject::ObjectPropertyObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectPropertyObject();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.ObjectPropertyObject)
}
ObjectPropertyObject::ObjectPropertyObject(const ObjectPropertyObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      property_list_(from.property_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player_id()) {
    player_id_ = new ::NFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFMsg.ObjectPropertyObject)
}

void ObjectPropertyObject::SharedCtor() {
  player_id_ = NULL;
  _cached_size_ = 0;
}

ObjectPropertyObject::~ObjectPropertyObject() {
  // @@protoc_insertion_point(destructor:NFMsg.ObjectPropertyObject)
  SharedDtor();
}

void ObjectPropertyObject::SharedDtor() {
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectPropertyObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectPropertyObject::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectPropertyObject& ObjectPropertyObject::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectPropertyObject();
  return *internal_default_instance();
}

ObjectPropertyObject* ObjectPropertyObject::New(::google::protobuf::Arena* arena) const {
  ObjectPropertyObject* n = new ObjectPropertyObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectPropertyObject::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.ObjectPropertyObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_list_.Clear();
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectPropertyObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.ObjectPropertyObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.PropertyObject property_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_property_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.ObjectPropertyObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.ObjectPropertyObject)
  return false;
#undef DO_
}

void ObjectPropertyObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.ObjectPropertyObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // repeated .NFMsg.PropertyObject property_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->property_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.ObjectPropertyObject)
}

::google::protobuf::uint8* ObjectPropertyObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.ObjectPropertyObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->player_id_, deterministic, target);
  }

  // repeated .NFMsg.PropertyObject property_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->property_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.ObjectPropertyObject)
  return target;
}

size_t ObjectPropertyObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.ObjectPropertyObject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFMsg.PropertyObject property_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->property_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property_list(static_cast<int>(i)));
    }
  }

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->player_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectPropertyObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.ObjectPropertyObject)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectPropertyObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectPropertyObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.ObjectPropertyObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.ObjectPropertyObject)
    MergeFrom(*source);
  }
}

void ObjectPropertyObject::MergeFrom(const ObjectPropertyObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.ObjectPropertyObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  property_list_.MergeFrom(from.property_list_);
  if (from.has_player_id()) {
    mutable_player_id()->::NFMsg::Ident::MergeFrom(from.player_id());
  }
}

void ObjectPropertyObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.ObjectPropertyObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectPropertyObject::CopyFrom(const ObjectPropertyObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.ObjectPropertyObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectPropertyObject::IsInitialized() const {
  return true;
}

void ObjectPropertyObject::Swap(ObjectPropertyObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectPropertyObject::InternalSwap(ObjectPropertyObject* other) {
  using std::swap;
  property_list_.InternalSwap(&other->property_list_);
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectPropertyObject::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectPropertyVector2::InitAsDefaultInstance() {
  ::NFMsg::_ObjectPropertyVector2_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectPropertyVector2::kPlayerIdFieldNumber;
const int ObjectPropertyVector2::kPropertyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectPropertyVector2::ObjectPropertyVector2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectPropertyVector2();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.ObjectPropertyVector2)
}
ObjectPropertyVector2::ObjectPropertyVector2(const ObjectPropertyVector2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      property_list_(from.property_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player_id()) {
    player_id_ = new ::NFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFMsg.ObjectPropertyVector2)
}

void ObjectPropertyVector2::SharedCtor() {
  player_id_ = NULL;
  _cached_size_ = 0;
}

ObjectPropertyVector2::~ObjectPropertyVector2() {
  // @@protoc_insertion_point(destructor:NFMsg.ObjectPropertyVector2)
  SharedDtor();
}

void ObjectPropertyVector2::SharedDtor() {
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectPropertyVector2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectPropertyVector2::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectPropertyVector2& ObjectPropertyVector2::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectPropertyVector2();
  return *internal_default_instance();
}

ObjectPropertyVector2* ObjectPropertyVector2::New(::google::protobuf::Arena* arena) const {
  ObjectPropertyVector2* n = new ObjectPropertyVector2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectPropertyVector2::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.ObjectPropertyVector2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_list_.Clear();
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectPropertyVector2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.ObjectPropertyVector2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.PropertyVector2 property_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_property_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.ObjectPropertyVector2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.ObjectPropertyVector2)
  return false;
#undef DO_
}

void ObjectPropertyVector2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.ObjectPropertyVector2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // repeated .NFMsg.PropertyVector2 property_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->property_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.ObjectPropertyVector2)
}

::google::protobuf::uint8* ObjectPropertyVector2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.ObjectPropertyVector2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->player_id_, deterministic, target);
  }

  // repeated .NFMsg.PropertyVector2 property_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->property_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.ObjectPropertyVector2)
  return target;
}

size_t ObjectPropertyVector2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.ObjectPropertyVector2)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFMsg.PropertyVector2 property_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->property_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property_list(static_cast<int>(i)));
    }
  }

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->player_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectPropertyVector2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.ObjectPropertyVector2)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectPropertyVector2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectPropertyVector2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.ObjectPropertyVector2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.ObjectPropertyVector2)
    MergeFrom(*source);
  }
}

void ObjectPropertyVector2::MergeFrom(const ObjectPropertyVector2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.ObjectPropertyVector2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  property_list_.MergeFrom(from.property_list_);
  if (from.has_player_id()) {
    mutable_player_id()->::NFMsg::Ident::MergeFrom(from.player_id());
  }
}

void ObjectPropertyVector2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.ObjectPropertyVector2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectPropertyVector2::CopyFrom(const ObjectPropertyVector2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.ObjectPropertyVector2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectPropertyVector2::IsInitialized() const {
  return true;
}

void ObjectPropertyVector2::Swap(ObjectPropertyVector2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectPropertyVector2::InternalSwap(ObjectPropertyVector2* other) {
  using std::swap;
  property_list_.InternalSwap(&other->property_list_);
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectPropertyVector2::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectPropertyVector3::InitAsDefaultInstance() {
  ::NFMsg::_ObjectPropertyVector3_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectPropertyVector3::kPlayerIdFieldNumber;
const int ObjectPropertyVector3::kPropertyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectPropertyVector3::ObjectPropertyVector3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectPropertyVector3();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.ObjectPropertyVector3)
}
ObjectPropertyVector3::ObjectPropertyVector3(const ObjectPropertyVector3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      property_list_(from.property_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player_id()) {
    player_id_ = new ::NFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFMsg.ObjectPropertyVector3)
}

void ObjectPropertyVector3::SharedCtor() {
  player_id_ = NULL;
  _cached_size_ = 0;
}

ObjectPropertyVector3::~ObjectPropertyVector3() {
  // @@protoc_insertion_point(destructor:NFMsg.ObjectPropertyVector3)
  SharedDtor();
}

void ObjectPropertyVector3::SharedDtor() {
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectPropertyVector3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectPropertyVector3::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectPropertyVector3& ObjectPropertyVector3::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectPropertyVector3();
  return *internal_default_instance();
}

ObjectPropertyVector3* ObjectPropertyVector3::New(::google::protobuf::Arena* arena) const {
  ObjectPropertyVector3* n = new ObjectPropertyVector3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectPropertyVector3::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.ObjectPropertyVector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_list_.Clear();
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectPropertyVector3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.ObjectPropertyVector3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.PropertyVector3 property_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_property_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.ObjectPropertyVector3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.ObjectPropertyVector3)
  return false;
#undef DO_
}

void ObjectPropertyVector3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.ObjectPropertyVector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // repeated .NFMsg.PropertyVector3 property_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->property_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.ObjectPropertyVector3)
}

::google::protobuf::uint8* ObjectPropertyVector3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.ObjectPropertyVector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->player_id_, deterministic, target);
  }

  // repeated .NFMsg.PropertyVector3 property_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->property_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.ObjectPropertyVector3)
  return target;
}

size_t ObjectPropertyVector3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.ObjectPropertyVector3)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFMsg.PropertyVector3 property_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->property_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property_list(static_cast<int>(i)));
    }
  }

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->player_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectPropertyVector3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.ObjectPropertyVector3)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectPropertyVector3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectPropertyVector3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.ObjectPropertyVector3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.ObjectPropertyVector3)
    MergeFrom(*source);
  }
}

void ObjectPropertyVector3::MergeFrom(const ObjectPropertyVector3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.ObjectPropertyVector3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  property_list_.MergeFrom(from.property_list_);
  if (from.has_player_id()) {
    mutable_player_id()->::NFMsg::Ident::MergeFrom(from.player_id());
  }
}

void ObjectPropertyVector3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.ObjectPropertyVector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectPropertyVector3::CopyFrom(const ObjectPropertyVector3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.ObjectPropertyVector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectPropertyVector3::IsInitialized() const {
  return true;
}

void ObjectPropertyVector3::Swap(ObjectPropertyVector3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectPropertyVector3::InternalSwap(ObjectPropertyVector3* other) {
  using std::swap;
  property_list_.InternalSwap(&other->property_list_);
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectPropertyVector3::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectRecordInt::InitAsDefaultInstance() {
  ::NFMsg::_ObjectRecordInt_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordInt::kPlayerIdFieldNumber;
const int ObjectRecordInt::kRecordNameFieldNumber;
const int ObjectRecordInt::kPropertyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordInt::ObjectRecordInt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordInt();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.ObjectRecordInt)
}
ObjectRecordInt::ObjectRecordInt(const ObjectRecordInt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      property_list_(from.property_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record_name().size() > 0) {
    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  if (from.has_player_id()) {
    player_id_ = new ::NFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFMsg.ObjectRecordInt)
}

void ObjectRecordInt::SharedCtor() {
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_id_ = NULL;
  _cached_size_ = 0;
}

ObjectRecordInt::~ObjectRecordInt() {
  // @@protoc_insertion_point(destructor:NFMsg.ObjectRecordInt)
  SharedDtor();
}

void ObjectRecordInt::SharedDtor() {
  record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectRecordInt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordInt::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectRecordInt& ObjectRecordInt::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordInt();
  return *internal_default_instance();
}

ObjectRecordInt* ObjectRecordInt::New(::google::protobuf::Arena* arena) const {
  ObjectRecordInt* n = new ObjectRecordInt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectRecordInt::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.ObjectRecordInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_list_.Clear();
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectRecordInt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.ObjectRecordInt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes record_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.RecordInt property_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_property_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.ObjectRecordInt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.ObjectRecordInt)
  return false;
#undef DO_
}

void ObjectRecordInt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.ObjectRecordInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->record_name(), output);
  }

  // repeated .NFMsg.RecordInt property_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->property_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.ObjectRecordInt)
}

::google::protobuf::uint8* ObjectRecordInt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.ObjectRecordInt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->player_id_, deterministic, target);
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->record_name(), target);
  }

  // repeated .NFMsg.RecordInt property_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->property_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.ObjectRecordInt)
  return target;
}

size_t ObjectRecordInt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.ObjectRecordInt)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFMsg.RecordInt property_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->property_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property_list(static_cast<int>(i)));
    }
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record_name());
  }

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->player_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordInt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.ObjectRecordInt)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectRecordInt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordInt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.ObjectRecordInt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.ObjectRecordInt)
    MergeFrom(*source);
  }
}

void ObjectRecordInt::MergeFrom(const ObjectRecordInt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.ObjectRecordInt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  property_list_.MergeFrom(from.property_list_);
  if (from.record_name().size() > 0) {

    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  if (from.has_player_id()) {
    mutable_player_id()->::NFMsg::Ident::MergeFrom(from.player_id());
  }
}

void ObjectRecordInt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.ObjectRecordInt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordInt::CopyFrom(const ObjectRecordInt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.ObjectRecordInt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordInt::IsInitialized() const {
  return true;
}

void ObjectRecordInt::Swap(ObjectRecordInt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordInt::InternalSwap(ObjectRecordInt* other) {
  using std::swap;
  property_list_.InternalSwap(&other->property_list_);
  record_name_.Swap(&other->record_name_);
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordInt::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectRecordFloat::InitAsDefaultInstance() {
  ::NFMsg::_ObjectRecordFloat_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordFloat::kPlayerIdFieldNumber;
const int ObjectRecordFloat::kRecordNameFieldNumber;
const int ObjectRecordFloat::kPropertyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordFloat::ObjectRecordFloat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordFloat();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.ObjectRecordFloat)
}
ObjectRecordFloat::ObjectRecordFloat(const ObjectRecordFloat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      property_list_(from.property_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record_name().size() > 0) {
    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  if (from.has_player_id()) {
    player_id_ = new ::NFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFMsg.ObjectRecordFloat)
}

void ObjectRecordFloat::SharedCtor() {
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_id_ = NULL;
  _cached_size_ = 0;
}

ObjectRecordFloat::~ObjectRecordFloat() {
  // @@protoc_insertion_point(destructor:NFMsg.ObjectRecordFloat)
  SharedDtor();
}

void ObjectRecordFloat::SharedDtor() {
  record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectRecordFloat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordFloat::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectRecordFloat& ObjectRecordFloat::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordFloat();
  return *internal_default_instance();
}

ObjectRecordFloat* ObjectRecordFloat::New(::google::protobuf::Arena* arena) const {
  ObjectRecordFloat* n = new ObjectRecordFloat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectRecordFloat::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.ObjectRecordFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_list_.Clear();
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectRecordFloat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.ObjectRecordFloat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes record_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.RecordFloat property_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_property_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.ObjectRecordFloat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.ObjectRecordFloat)
  return false;
#undef DO_
}

void ObjectRecordFloat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.ObjectRecordFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->record_name(), output);
  }

  // repeated .NFMsg.RecordFloat property_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->property_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.ObjectRecordFloat)
}

::google::protobuf::uint8* ObjectRecordFloat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.ObjectRecordFloat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->player_id_, deterministic, target);
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->record_name(), target);
  }

  // repeated .NFMsg.RecordFloat property_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->property_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.ObjectRecordFloat)
  return target;
}

size_t ObjectRecordFloat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.ObjectRecordFloat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFMsg.RecordFloat property_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->property_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property_list(static_cast<int>(i)));
    }
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record_name());
  }

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->player_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordFloat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.ObjectRecordFloat)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectRecordFloat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordFloat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.ObjectRecordFloat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.ObjectRecordFloat)
    MergeFrom(*source);
  }
}

void ObjectRecordFloat::MergeFrom(const ObjectRecordFloat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.ObjectRecordFloat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  property_list_.MergeFrom(from.property_list_);
  if (from.record_name().size() > 0) {

    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  if (from.has_player_id()) {
    mutable_player_id()->::NFMsg::Ident::MergeFrom(from.player_id());
  }
}

void ObjectRecordFloat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.ObjectRecordFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordFloat::CopyFrom(const ObjectRecordFloat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.ObjectRecordFloat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordFloat::IsInitialized() const {
  return true;
}

void ObjectRecordFloat::Swap(ObjectRecordFloat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordFloat::InternalSwap(ObjectRecordFloat* other) {
  using std::swap;
  property_list_.InternalSwap(&other->property_list_);
  record_name_.Swap(&other->record_name_);
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordFloat::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectRecordString::InitAsDefaultInstance() {
  ::NFMsg::_ObjectRecordString_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordString::kPlayerIdFieldNumber;
const int ObjectRecordString::kRecordNameFieldNumber;
const int ObjectRecordString::kPropertyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordString::ObjectRecordString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordString();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.ObjectRecordString)
}
ObjectRecordString::ObjectRecordString(const ObjectRecordString& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      property_list_(from.property_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record_name().size() > 0) {
    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  if (from.has_player_id()) {
    player_id_ = new ::NFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFMsg.ObjectRecordString)
}

void ObjectRecordString::SharedCtor() {
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_id_ = NULL;
  _cached_size_ = 0;
}

ObjectRecordString::~ObjectRecordString() {
  // @@protoc_insertion_point(destructor:NFMsg.ObjectRecordString)
  SharedDtor();
}

void ObjectRecordString::SharedDtor() {
  record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectRecordString::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordString::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectRecordString& ObjectRecordString::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordString();
  return *internal_default_instance();
}

ObjectRecordString* ObjectRecordString::New(::google::protobuf::Arena* arena) const {
  ObjectRecordString* n = new ObjectRecordString;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectRecordString::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.ObjectRecordString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_list_.Clear();
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectRecordString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.ObjectRecordString)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes record_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.RecordString property_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_property_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.ObjectRecordString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.ObjectRecordString)
  return false;
#undef DO_
}

void ObjectRecordString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.ObjectRecordString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->record_name(), output);
  }

  // repeated .NFMsg.RecordString property_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->property_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.ObjectRecordString)
}

::google::protobuf::uint8* ObjectRecordString::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.ObjectRecordString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->player_id_, deterministic, target);
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->record_name(), target);
  }

  // repeated .NFMsg.RecordString property_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->property_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.ObjectRecordString)
  return target;
}

size_t ObjectRecordString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.ObjectRecordString)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFMsg.RecordString property_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->property_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property_list(static_cast<int>(i)));
    }
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record_name());
  }

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->player_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.ObjectRecordString)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectRecordString* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordString>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.ObjectRecordString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.ObjectRecordString)
    MergeFrom(*source);
  }
}

void ObjectRecordString::MergeFrom(const ObjectRecordString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.ObjectRecordString)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  property_list_.MergeFrom(from.property_list_);
  if (from.record_name().size() > 0) {

    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  if (from.has_player_id()) {
    mutable_player_id()->::NFMsg::Ident::MergeFrom(from.player_id());
  }
}

void ObjectRecordString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.ObjectRecordString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordString::CopyFrom(const ObjectRecordString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.ObjectRecordString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordString::IsInitialized() const {
  return true;
}

void ObjectRecordString::Swap(ObjectRecordString* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordString::InternalSwap(ObjectRecordString* other) {
  using std::swap;
  property_list_.InternalSwap(&other->property_list_);
  record_name_.Swap(&other->record_name_);
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordString::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectRecordObject::InitAsDefaultInstance() {
  ::NFMsg::_ObjectRecordObject_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordObject::kPlayerIdFieldNumber;
const int ObjectRecordObject::kRecordNameFieldNumber;
const int ObjectRecordObject::kPropertyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordObject::ObjectRecordObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordObject();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.ObjectRecordObject)
}
ObjectRecordObject::ObjectRecordObject(const ObjectRecordObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      property_list_(from.property_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record_name().size() > 0) {
    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  if (from.has_player_id()) {
    player_id_ = new ::NFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFMsg.ObjectRecordObject)
}

void ObjectRecordObject::SharedCtor() {
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_id_ = NULL;
  _cached_size_ = 0;
}

ObjectRecordObject::~ObjectRecordObject() {
  // @@protoc_insertion_point(destructor:NFMsg.ObjectRecordObject)
  SharedDtor();
}

void ObjectRecordObject::SharedDtor() {
  record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectRecordObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordObject::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectRecordObject& ObjectRecordObject::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordObject();
  return *internal_default_instance();
}

ObjectRecordObject* ObjectRecordObject::New(::google::protobuf::Arena* arena) const {
  ObjectRecordObject* n = new ObjectRecordObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectRecordObject::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.ObjectRecordObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_list_.Clear();
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectRecordObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.ObjectRecordObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes record_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.RecordObject property_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_property_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.ObjectRecordObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.ObjectRecordObject)
  return false;
#undef DO_
}

void ObjectRecordObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.ObjectRecordObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->record_name(), output);
  }

  // repeated .NFMsg.RecordObject property_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->property_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.ObjectRecordObject)
}

::google::protobuf::uint8* ObjectRecordObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.ObjectRecordObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->player_id_, deterministic, target);
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->record_name(), target);
  }

  // repeated .NFMsg.RecordObject property_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->property_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.ObjectRecordObject)
  return target;
}

size_t ObjectRecordObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.ObjectRecordObject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFMsg.RecordObject property_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->property_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property_list(static_cast<int>(i)));
    }
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record_name());
  }

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->player_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.ObjectRecordObject)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectRecordObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.ObjectRecordObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.ObjectRecordObject)
    MergeFrom(*source);
  }
}

void ObjectRecordObject::MergeFrom(const ObjectRecordObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.ObjectRecordObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  property_list_.MergeFrom(from.property_list_);
  if (from.record_name().size() > 0) {

    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  if (from.has_player_id()) {
    mutable_player_id()->::NFMsg::Ident::MergeFrom(from.player_id());
  }
}

void ObjectRecordObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.ObjectRecordObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordObject::CopyFrom(const ObjectRecordObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.ObjectRecordObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordObject::IsInitialized() const {
  return true;
}

void ObjectRecordObject::Swap(ObjectRecordObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordObject::InternalSwap(ObjectRecordObject* other) {
  using std::swap;
  property_list_.InternalSwap(&other->property_list_);
  record_name_.Swap(&other->record_name_);
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordObject::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectRecordVector2::InitAsDefaultInstance() {
  ::NFMsg::_ObjectRecordVector2_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordVector2::kPlayerIdFieldNumber;
const int ObjectRecordVector2::kRecordNameFieldNumber;
const int ObjectRecordVector2::kPropertyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordVector2::ObjectRecordVector2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordVector2();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.ObjectRecordVector2)
}
ObjectRecordVector2::ObjectRecordVector2(const ObjectRecordVector2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      property_list_(from.property_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record_name().size() > 0) {
    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  if (from.has_player_id()) {
    player_id_ = new ::NFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFMsg.ObjectRecordVector2)
}

void ObjectRecordVector2::SharedCtor() {
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_id_ = NULL;
  _cached_size_ = 0;
}

ObjectRecordVector2::~ObjectRecordVector2() {
  // @@protoc_insertion_point(destructor:NFMsg.ObjectRecordVector2)
  SharedDtor();
}

void ObjectRecordVector2::SharedDtor() {
  record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectRecordVector2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordVector2::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectRecordVector2& ObjectRecordVector2::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordVector2();
  return *internal_default_instance();
}

ObjectRecordVector2* ObjectRecordVector2::New(::google::protobuf::Arena* arena) const {
  ObjectRecordVector2* n = new ObjectRecordVector2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectRecordVector2::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.ObjectRecordVector2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_list_.Clear();
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectRecordVector2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.ObjectRecordVector2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes record_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.RecordVector2 property_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_property_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.ObjectRecordVector2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.ObjectRecordVector2)
  return false;
#undef DO_
}

void ObjectRecordVector2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.ObjectRecordVector2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->record_name(), output);
  }

  // repeated .NFMsg.RecordVector2 property_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->property_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.ObjectRecordVector2)
}

::google::protobuf::uint8* ObjectRecordVector2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.ObjectRecordVector2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->player_id_, deterministic, target);
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->record_name(), target);
  }

  // repeated .NFMsg.RecordVector2 property_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->property_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.ObjectRecordVector2)
  return target;
}

size_t ObjectRecordVector2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.ObjectRecordVector2)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFMsg.RecordVector2 property_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->property_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property_list(static_cast<int>(i)));
    }
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record_name());
  }

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->player_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordVector2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.ObjectRecordVector2)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectRecordVector2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordVector2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.ObjectRecordVector2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.ObjectRecordVector2)
    MergeFrom(*source);
  }
}

void ObjectRecordVector2::MergeFrom(const ObjectRecordVector2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.ObjectRecordVector2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  property_list_.MergeFrom(from.property_list_);
  if (from.record_name().size() > 0) {

    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  if (from.has_player_id()) {
    mutable_player_id()->::NFMsg::Ident::MergeFrom(from.player_id());
  }
}

void ObjectRecordVector2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.ObjectRecordVector2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordVector2::CopyFrom(const ObjectRecordVector2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.ObjectRecordVector2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordVector2::IsInitialized() const {
  return true;
}

void ObjectRecordVector2::Swap(ObjectRecordVector2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordVector2::InternalSwap(ObjectRecordVector2* other) {
  using std::swap;
  property_list_.InternalSwap(&other->property_list_);
  record_name_.Swap(&other->record_name_);
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordVector2::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectRecordVector3::InitAsDefaultInstance() {
  ::NFMsg::_ObjectRecordVector3_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordVector3::kPlayerIdFieldNumber;
const int ObjectRecordVector3::kRecordNameFieldNumber;
const int ObjectRecordVector3::kPropertyListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordVector3::ObjectRecordVector3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordVector3();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.ObjectRecordVector3)
}
ObjectRecordVector3::ObjectRecordVector3(const ObjectRecordVector3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      property_list_(from.property_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record_name().size() > 0) {
    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  if (from.has_player_id()) {
    player_id_ = new ::NFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFMsg.ObjectRecordVector3)
}

void ObjectRecordVector3::SharedCtor() {
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_id_ = NULL;
  _cached_size_ = 0;
}

ObjectRecordVector3::~ObjectRecordVector3() {
  // @@protoc_insertion_point(destructor:NFMsg.ObjectRecordVector3)
  SharedDtor();
}

void ObjectRecordVector3::SharedDtor() {
  record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectRecordVector3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordVector3::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectRecordVector3& ObjectRecordVector3::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordVector3();
  return *internal_default_instance();
}

ObjectRecordVector3* ObjectRecordVector3::New(::google::protobuf::Arena* arena) const {
  ObjectRecordVector3* n = new ObjectRecordVector3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectRecordVector3::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.ObjectRecordVector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_list_.Clear();
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectRecordVector3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.ObjectRecordVector3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes record_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.RecordVector3 property_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_property_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.ObjectRecordVector3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.ObjectRecordVector3)
  return false;
#undef DO_
}

void ObjectRecordVector3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.ObjectRecordVector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->record_name(), output);
  }

  // repeated .NFMsg.RecordVector3 property_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->property_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.ObjectRecordVector3)
}

::google::protobuf::uint8* ObjectRecordVector3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.ObjectRecordVector3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->player_id_, deterministic, target);
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->record_name(), target);
  }

  // repeated .NFMsg.RecordVector3 property_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->property_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.ObjectRecordVector3)
  return target;
}

size_t ObjectRecordVector3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.ObjectRecordVector3)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFMsg.RecordVector3 property_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->property_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property_list(static_cast<int>(i)));
    }
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record_name());
  }

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->player_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordVector3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.ObjectRecordVector3)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectRecordVector3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordVector3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.ObjectRecordVector3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.ObjectRecordVector3)
    MergeFrom(*source);
  }
}

void ObjectRecordVector3::MergeFrom(const ObjectRecordVector3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.ObjectRecordVector3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  property_list_.MergeFrom(from.property_list_);
  if (from.record_name().size() > 0) {

    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  if (from.has_player_id()) {
    mutable_player_id()->::NFMsg::Ident::MergeFrom(from.player_id());
  }
}

void ObjectRecordVector3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.ObjectRecordVector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordVector3::CopyFrom(const ObjectRecordVector3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.ObjectRecordVector3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordVector3::IsInitialized() const {
  return true;
}

void ObjectRecordVector3::Swap(ObjectRecordVector3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordVector3::InternalSwap(ObjectRecordVector3* other) {
  using std::swap;
  property_list_.InternalSwap(&other->property_list_);
  record_name_.Swap(&other->record_name_);
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordVector3::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectRecordSwap::InitAsDefaultInstance() {
  ::NFMsg::_ObjectRecordSwap_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordSwap::kPlayerIdFieldNumber;
const int ObjectRecordSwap::kOriginRecordNameFieldNumber;
const int ObjectRecordSwap::kTargetRecordNameFieldNumber;
const int ObjectRecordSwap::kRowOriginFieldNumber;
const int ObjectRecordSwap::kRowTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordSwap::ObjectRecordSwap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordSwap();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.ObjectRecordSwap)
}
ObjectRecordSwap::ObjectRecordSwap(const ObjectRecordSwap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  origin_record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.origin_record_name().size() > 0) {
    origin_record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_record_name_);
  }
  target_record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.target_record_name().size() > 0) {
    target_record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_record_name_);
  }
  if (from.has_player_id()) {
    player_id_ = new ::NFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  ::memcpy(&row_origin_, &from.row_origin_,
    static_cast<size_t>(reinterpret_cast<char*>(&row_target_) -
    reinterpret_cast<char*>(&row_origin_)) + sizeof(row_target_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.ObjectRecordSwap)
}

void ObjectRecordSwap::SharedCtor() {
  origin_record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&row_target_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(row_target_));
  _cached_size_ = 0;
}

ObjectRecordSwap::~ObjectRecordSwap() {
  // @@protoc_insertion_point(destructor:NFMsg.ObjectRecordSwap)
  SharedDtor();
}

void ObjectRecordSwap::SharedDtor() {
  origin_record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectRecordSwap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordSwap::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectRecordSwap& ObjectRecordSwap::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordSwap();
  return *internal_default_instance();
}

ObjectRecordSwap* ObjectRecordSwap::New(::google::protobuf::Arena* arena) const {
  ObjectRecordSwap* n = new ObjectRecordSwap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectRecordSwap::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.ObjectRecordSwap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  origin_record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  target_record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  ::memset(&row_origin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&row_target_) -
      reinterpret_cast<char*>(&row_origin_)) + sizeof(row_target_));
  _internal_metadata_.Clear();
}

bool ObjectRecordSwap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.ObjectRecordSwap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes origin_record_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_origin_record_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes target_record_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_target_record_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 row_origin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_origin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 row_target = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.ObjectRecordSwap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.ObjectRecordSwap)
  return false;
#undef DO_
}

void ObjectRecordSwap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.ObjectRecordSwap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // bytes origin_record_name = 2;
  if (this->origin_record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->origin_record_name(), output);
  }

  // bytes target_record_name = 3;
  if (this->target_record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->target_record_name(), output);
  }

  // int32 row_origin = 4;
  if (this->row_origin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->row_origin(), output);
  }

  // int32 row_target = 5;
  if (this->row_target() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->row_target(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.ObjectRecordSwap)
}

::google::protobuf::uint8* ObjectRecordSwap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.ObjectRecordSwap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->player_id_, deterministic, target);
  }

  // bytes origin_record_name = 2;
  if (this->origin_record_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->origin_record_name(), target);
  }

  // bytes target_record_name = 3;
  if (this->target_record_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->target_record_name(), target);
  }

  // int32 row_origin = 4;
  if (this->row_origin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->row_origin(), target);
  }

  // int32 row_target = 5;
  if (this->row_target() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->row_target(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.ObjectRecordSwap)
  return target;
}

size_t ObjectRecordSwap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.ObjectRecordSwap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes origin_record_name = 2;
  if (this->origin_record_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->origin_record_name());
  }

  // bytes target_record_name = 3;
  if (this->target_record_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->target_record_name());
  }

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->player_id_);
  }

  // int32 row_origin = 4;
  if (this->row_origin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row_origin());
  }

  // int32 row_target = 5;
  if (this->row_target() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row_target());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordSwap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.ObjectRecordSwap)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectRecordSwap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordSwap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.ObjectRecordSwap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.ObjectRecordSwap)
    MergeFrom(*source);
  }
}

void ObjectRecordSwap::MergeFrom(const ObjectRecordSwap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.ObjectRecordSwap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.origin_record_name().size() > 0) {

    origin_record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_record_name_);
  }
  if (from.target_record_name().size() > 0) {

    target_record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.target_record_name_);
  }
  if (from.has_player_id()) {
    mutable_player_id()->::NFMsg::Ident::MergeFrom(from.player_id());
  }
  if (from.row_origin() != 0) {
    set_row_origin(from.row_origin());
  }
  if (from.row_target() != 0) {
    set_row_target(from.row_target());
  }
}

void ObjectRecordSwap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.ObjectRecordSwap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordSwap::CopyFrom(const ObjectRecordSwap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.ObjectRecordSwap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordSwap::IsInitialized() const {
  return true;
}

void ObjectRecordSwap::Swap(ObjectRecordSwap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordSwap::InternalSwap(ObjectRecordSwap* other) {
  using std::swap;
  origin_record_name_.Swap(&other->origin_record_name_);
  target_record_name_.Swap(&other->target_record_name_);
  swap(player_id_, other->player_id_);
  swap(row_origin_, other->row_origin_);
  swap(row_target_, other->row_target_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordSwap::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectRecordAddRow::InitAsDefaultInstance() {
  ::NFMsg::_ObjectRecordAddRow_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordAddRow::kPlayerIdFieldNumber;
const int ObjectRecordAddRow::kRecordNameFieldNumber;
const int ObjectRecordAddRow::kRowDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordAddRow::ObjectRecordAddRow()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordAddRow();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.ObjectRecordAddRow)
}
ObjectRecordAddRow::ObjectRecordAddRow(const ObjectRecordAddRow& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      row_data_(from.row_data_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record_name().size() > 0) {
    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  if (from.has_player_id()) {
    player_id_ = new ::NFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFMsg.ObjectRecordAddRow)
}

void ObjectRecordAddRow::SharedCtor() {
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_id_ = NULL;
  _cached_size_ = 0;
}

ObjectRecordAddRow::~ObjectRecordAddRow() {
  // @@protoc_insertion_point(destructor:NFMsg.ObjectRecordAddRow)
  SharedDtor();
}

void ObjectRecordAddRow::SharedDtor() {
  record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectRecordAddRow::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordAddRow::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectRecordAddRow& ObjectRecordAddRow::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordAddRow();
  return *internal_default_instance();
}

ObjectRecordAddRow* ObjectRecordAddRow::New(::google::protobuf::Arena* arena) const {
  ObjectRecordAddRow* n = new ObjectRecordAddRow;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectRecordAddRow::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.ObjectRecordAddRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  row_data_.Clear();
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectRecordAddRow::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.ObjectRecordAddRow)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes record_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.RecordAddRowStruct row_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_row_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.ObjectRecordAddRow)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.ObjectRecordAddRow)
  return false;
#undef DO_
}

void ObjectRecordAddRow::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.ObjectRecordAddRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->record_name(), output);
  }

  // repeated .NFMsg.RecordAddRowStruct row_data = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->row_data_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->row_data(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.ObjectRecordAddRow)
}

::google::protobuf::uint8* ObjectRecordAddRow::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.ObjectRecordAddRow)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->player_id_, deterministic, target);
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->record_name(), target);
  }

  // repeated .NFMsg.RecordAddRowStruct row_data = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->row_data_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->row_data(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.ObjectRecordAddRow)
  return target;
}

size_t ObjectRecordAddRow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.ObjectRecordAddRow)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFMsg.RecordAddRowStruct row_data = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->row_data_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->row_data(static_cast<int>(i)));
    }
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record_name());
  }

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->player_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordAddRow::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.ObjectRecordAddRow)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectRecordAddRow* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordAddRow>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.ObjectRecordAddRow)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.ObjectRecordAddRow)
    MergeFrom(*source);
  }
}

void ObjectRecordAddRow::MergeFrom(const ObjectRecordAddRow& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.ObjectRecordAddRow)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  row_data_.MergeFrom(from.row_data_);
  if (from.record_name().size() > 0) {

    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  if (from.has_player_id()) {
    mutable_player_id()->::NFMsg::Ident::MergeFrom(from.player_id());
  }
}

void ObjectRecordAddRow::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.ObjectRecordAddRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordAddRow::CopyFrom(const ObjectRecordAddRow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.ObjectRecordAddRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordAddRow::IsInitialized() const {
  return true;
}

void ObjectRecordAddRow::Swap(ObjectRecordAddRow* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordAddRow::InternalSwap(ObjectRecordAddRow* other) {
  using std::swap;
  row_data_.InternalSwap(&other->row_data_);
  record_name_.Swap(&other->record_name_);
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordAddRow::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectRecordRemove::InitAsDefaultInstance() {
  ::NFMsg::_ObjectRecordRemove_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordRemove::kPlayerIdFieldNumber;
const int ObjectRecordRemove::kRecordNameFieldNumber;
const int ObjectRecordRemove::kRemoveRowFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordRemove::ObjectRecordRemove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordRemove();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.ObjectRecordRemove)
}
ObjectRecordRemove::ObjectRecordRemove(const ObjectRecordRemove& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      remove_row_(from.remove_row_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record_name().size() > 0) {
    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  if (from.has_player_id()) {
    player_id_ = new ::NFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFMsg.ObjectRecordRemove)
}

void ObjectRecordRemove::SharedCtor() {
  record_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_id_ = NULL;
  _cached_size_ = 0;
}

ObjectRecordRemove::~ObjectRecordRemove() {
  // @@protoc_insertion_point(destructor:NFMsg.ObjectRecordRemove)
  SharedDtor();
}

void ObjectRecordRemove::SharedDtor() {
  record_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectRecordRemove::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordRemove::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectRecordRemove& ObjectRecordRemove::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordRemove();
  return *internal_default_instance();
}

ObjectRecordRemove* ObjectRecordRemove::New(::google::protobuf::Arena* arena) const {
  ObjectRecordRemove* n = new ObjectRecordRemove;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectRecordRemove::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.ObjectRecordRemove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  remove_row_.Clear();
  record_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectRecordRemove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.ObjectRecordRemove)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes record_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_record_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 remove_row = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_remove_row())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_remove_row())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.ObjectRecordRemove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.ObjectRecordRemove)
  return false;
#undef DO_
}

void ObjectRecordRemove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.ObjectRecordRemove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->record_name(), output);
  }

  // repeated int32 remove_row = 3;
  if (this->remove_row_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _remove_row_cached_byte_size_));
  }
  for (int i = 0, n = this->remove_row_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->remove_row(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.ObjectRecordRemove)
}

::google::protobuf::uint8* ObjectRecordRemove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.ObjectRecordRemove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->player_id_, deterministic, target);
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->record_name(), target);
  }

  // repeated int32 remove_row = 3;
  if (this->remove_row_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _remove_row_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->remove_row_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.ObjectRecordRemove)
  return target;
}

size_t ObjectRecordRemove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.ObjectRecordRemove)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 remove_row = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->remove_row_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _remove_row_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // bytes record_name = 2;
  if (this->record_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->record_name());
  }

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->player_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordRemove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.ObjectRecordRemove)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectRecordRemove* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordRemove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.ObjectRecordRemove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.ObjectRecordRemove)
    MergeFrom(*source);
  }
}

void ObjectRecordRemove::MergeFrom(const ObjectRecordRemove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.ObjectRecordRemove)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  remove_row_.MergeFrom(from.remove_row_);
  if (from.record_name().size() > 0) {

    record_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_name_);
  }
  if (from.has_player_id()) {
    mutable_player_id()->::NFMsg::Ident::MergeFrom(from.player_id());
  }
}

void ObjectRecordRemove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.ObjectRecordRemove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordRemove::CopyFrom(const ObjectRecordRemove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.ObjectRecordRemove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordRemove::IsInitialized() const {
  return true;
}

void ObjectRecordRemove::Swap(ObjectRecordRemove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordRemove::InternalSwap(ObjectRecordRemove* other) {
  using std::swap;
  remove_row_.InternalSwap(&other->remove_row_);
  record_name_.Swap(&other->record_name_);
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordRemove::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectPropertyList::InitAsDefaultInstance() {
  ::NFMsg::_ObjectPropertyList_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectPropertyList::kPlayerIdFieldNumber;
const int ObjectPropertyList::kPropertyIntListFieldNumber;
const int ObjectPropertyList::kPropertyFloatListFieldNumber;
const int ObjectPropertyList::kPropertyStringListFieldNumber;
const int ObjectPropertyList::kPropertyObjectListFieldNumber;
const int ObjectPropertyList::kPropertyVector2ListFieldNumber;
const int ObjectPropertyList::kPropertyVector3ListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectPropertyList::ObjectPropertyList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectPropertyList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.ObjectPropertyList)
}
ObjectPropertyList::ObjectPropertyList(const ObjectPropertyList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      property_int_list_(from.property_int_list_),
      property_float_list_(from.property_float_list_),
      property_string_list_(from.property_string_list_),
      property_object_list_(from.property_object_list_),
      property_vector2_list_(from.property_vector2_list_),
      property_vector3_list_(from.property_vector3_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player_id()) {
    player_id_ = new ::NFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFMsg.ObjectPropertyList)
}

void ObjectPropertyList::SharedCtor() {
  player_id_ = NULL;
  _cached_size_ = 0;
}

ObjectPropertyList::~ObjectPropertyList() {
  // @@protoc_insertion_point(destructor:NFMsg.ObjectPropertyList)
  SharedDtor();
}

void ObjectPropertyList::SharedDtor() {
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectPropertyList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectPropertyList::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectPropertyList& ObjectPropertyList::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectPropertyList();
  return *internal_default_instance();
}

ObjectPropertyList* ObjectPropertyList::New(::google::protobuf::Arena* arena) const {
  ObjectPropertyList* n = new ObjectPropertyList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectPropertyList::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.ObjectPropertyList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_int_list_.Clear();
  property_float_list_.Clear();
  property_string_list_.Clear();
  property_object_list_.Clear();
  property_vector2_list_.Clear();
  property_vector3_list_.Clear();
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectPropertyList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.ObjectPropertyList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.PropertyInt property_int_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_property_int_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.PropertyFloat property_float_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_property_float_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.PropertyString property_string_list = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_property_string_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.PropertyObject property_object_list = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_property_object_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.PropertyVector2 property_vector2_list = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_property_vector2_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.PropertyVector3 property_vector3_list = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_property_vector3_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.ObjectPropertyList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.ObjectPropertyList)
  return false;
#undef DO_
}

void ObjectPropertyList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.ObjectPropertyList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // repeated .NFMsg.PropertyInt property_int_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_int_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->property_int_list(static_cast<int>(i)), output);
  }

  // repeated .NFMsg.PropertyFloat property_float_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_float_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->property_float_list(static_cast<int>(i)), output);
  }

  // repeated .NFMsg.PropertyString property_string_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_string_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->property_string_list(static_cast<int>(i)), output);
  }

  // repeated .NFMsg.PropertyObject property_object_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_object_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->property_object_list(static_cast<int>(i)), output);
  }

  // repeated .NFMsg.PropertyVector2 property_vector2_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_vector2_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->property_vector2_list(static_cast<int>(i)), output);
  }

  // repeated .NFMsg.PropertyVector3 property_vector3_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_vector3_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->property_vector3_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.ObjectPropertyList)
}

::google::protobuf::uint8* ObjectPropertyList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.ObjectPropertyList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->player_id_, deterministic, target);
  }

  // repeated .NFMsg.PropertyInt property_int_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_int_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->property_int_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NFMsg.PropertyFloat property_float_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_float_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->property_float_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NFMsg.PropertyString property_string_list = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_string_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->property_string_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NFMsg.PropertyObject property_object_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_object_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->property_object_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NFMsg.PropertyVector2 property_vector2_list = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_vector2_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->property_vector2_list(static_cast<int>(i)), deterministic, target);
  }

  // repeated .NFMsg.PropertyVector3 property_vector3_list = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_vector3_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->property_vector3_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.ObjectPropertyList)
  return target;
}

size_t ObjectPropertyList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.ObjectPropertyList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFMsg.PropertyInt property_int_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->property_int_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property_int_list(static_cast<int>(i)));
    }
  }

  // repeated .NFMsg.PropertyFloat property_float_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->property_float_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property_float_list(static_cast<int>(i)));
    }
  }

  // repeated .NFMsg.PropertyString property_string_list = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->property_string_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property_string_list(static_cast<int>(i)));
    }
  }

  // repeated .NFMsg.PropertyObject property_object_list = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->property_object_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property_object_list(static_cast<int>(i)));
    }
  }

  // repeated .NFMsg.PropertyVector2 property_vector2_list = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->property_vector2_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property_vector2_list(static_cast<int>(i)));
    }
  }

  // repeated .NFMsg.PropertyVector3 property_vector3_list = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->property_vector3_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property_vector3_list(static_cast<int>(i)));
    }
  }

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->player_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectPropertyList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.ObjectPropertyList)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectPropertyList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectPropertyList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.ObjectPropertyList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.ObjectPropertyList)
    MergeFrom(*source);
  }
}

void ObjectPropertyList::MergeFrom(const ObjectPropertyList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.ObjectPropertyList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  property_int_list_.MergeFrom(from.property_int_list_);
  property_float_list_.MergeFrom(from.property_float_list_);
  property_string_list_.MergeFrom(from.property_string_list_);
  property_object_list_.MergeFrom(from.property_object_list_);
  property_vector2_list_.MergeFrom(from.property_vector2_list_);
  property_vector3_list_.MergeFrom(from.property_vector3_list_);
  if (from.has_player_id()) {
    mutable_player_id()->::NFMsg::Ident::MergeFrom(from.player_id());
  }
}

void ObjectPropertyList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.ObjectPropertyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectPropertyList::CopyFrom(const ObjectPropertyList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.ObjectPropertyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectPropertyList::IsInitialized() const {
  return true;
}

void ObjectPropertyList::Swap(ObjectPropertyList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectPropertyList::InternalSwap(ObjectPropertyList* other) {
  using std::swap;
  property_int_list_.InternalSwap(&other->property_int_list_);
  property_float_list_.InternalSwap(&other->property_float_list_);
  property_string_list_.InternalSwap(&other->property_string_list_);
  property_object_list_.InternalSwap(&other->property_object_list_);
  property_vector2_list_.InternalSwap(&other->property_vector2_list_);
  property_vector3_list_.InternalSwap(&other->property_vector3_list_);
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectPropertyList::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MultiObjectPropertyList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MultiObjectPropertyList::kMultiPlayerPropertyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MultiObjectPropertyList::MultiObjectPropertyList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsMultiObjectPropertyList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.MultiObjectPropertyList)
}
MultiObjectPropertyList::MultiObjectPropertyList(const MultiObjectPropertyList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      multi_player_property_(from.multi_player_property_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NFMsg.MultiObjectPropertyList)
}

void MultiObjectPropertyList::SharedCtor() {
  _cached_size_ = 0;
}

MultiObjectPropertyList::~MultiObjectPropertyList() {
  // @@protoc_insertion_point(destructor:NFMsg.MultiObjectPropertyList)
  SharedDtor();
}

void MultiObjectPropertyList::SharedDtor() {
}

void MultiObjectPropertyList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MultiObjectPropertyList::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MultiObjectPropertyList& MultiObjectPropertyList::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsMultiObjectPropertyList();
  return *internal_default_instance();
}

MultiObjectPropertyList* MultiObjectPropertyList::New(::google::protobuf::Arena* arena) const {
  MultiObjectPropertyList* n = new MultiObjectPropertyList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MultiObjectPropertyList::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.MultiObjectPropertyList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  multi_player_property_.Clear();
  _internal_metadata_.Clear();
}

bool MultiObjectPropertyList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.MultiObjectPropertyList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .NFMsg.ObjectPropertyList multi_player_property = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_multi_player_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.MultiObjectPropertyList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.MultiObjectPropertyList)
  return false;
#undef DO_
}

void MultiObjectPropertyList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.MultiObjectPropertyList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NFMsg.ObjectPropertyList multi_player_property = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->multi_player_property_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->multi_player_property(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.MultiObjectPropertyList)
}

::google::protobuf::uint8* MultiObjectPropertyList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.MultiObjectPropertyList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NFMsg.ObjectPropertyList multi_player_property = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->multi_player_property_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->multi_player_property(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.MultiObjectPropertyList)
  return target;
}

size_t MultiObjectPropertyList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.MultiObjectPropertyList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFMsg.ObjectPropertyList multi_player_property = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->multi_player_property_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->multi_player_property(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MultiObjectPropertyList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.MultiObjectPropertyList)
  GOOGLE_DCHECK_NE(&from, this);
  const MultiObjectPropertyList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MultiObjectPropertyList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.MultiObjectPropertyList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.MultiObjectPropertyList)
    MergeFrom(*source);
  }
}

void MultiObjectPropertyList::MergeFrom(const MultiObjectPropertyList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.MultiObjectPropertyList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  multi_player_property_.MergeFrom(from.multi_player_property_);
}

void MultiObjectPropertyList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.MultiObjectPropertyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MultiObjectPropertyList::CopyFrom(const MultiObjectPropertyList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.MultiObjectPropertyList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MultiObjectPropertyList::IsInitialized() const {
  return true;
}

void MultiObjectPropertyList::Swap(MultiObjectPropertyList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MultiObjectPropertyList::InternalSwap(MultiObjectPropertyList* other) {
  using std::swap;
  multi_player_property_.InternalSwap(&other->multi_player_property_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MultiObjectPropertyList::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ObjectRecordList::InitAsDefaultInstance() {
  ::NFMsg::_ObjectRecordList_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectRecordList::kPlayerIdFieldNumber;
const int ObjectRecordList::kRecordListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectRecordList::ObjectRecordList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.ObjectRecordList)
}
ObjectRecordList::ObjectRecordList(const ObjectRecordList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      record_list_(from.record_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_player_id()) {
    player_id_ = new ::NFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFMsg.ObjectRecordList)
}

void ObjectRecordList::SharedCtor() {
  player_id_ = NULL;
  _cached_size_ = 0;
}

ObjectRecordList::~ObjectRecordList() {
  // @@protoc_insertion_point(destructor:NFMsg.ObjectRecordList)
  SharedDtor();
}

void ObjectRecordList::SharedDtor() {
  if (this != internal_default_instance()) delete player_id_;
}

void ObjectRecordList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectRecordList::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ObjectRecordList& ObjectRecordList::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsObjectRecordList();
  return *internal_default_instance();
}

ObjectRecordList* ObjectRecordList::New(::google::protobuf::Arena* arena) const {
  ObjectRecordList* n = new ObjectRecordList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectRecordList::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.ObjectRecordList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  record_list_.Clear();
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  _internal_metadata_.Clear();
}

bool ObjectRecordList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.ObjectRecordList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.ObjectRecordBase record_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_record_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.ObjectRecordList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.ObjectRecordList)
  return false;
#undef DO_
}

void ObjectRecordList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.ObjectRecordList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // repeated .NFMsg.ObjectRecordBase record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->record_list(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.ObjectRecordList)
}

::google::protobuf::uint8* ObjectRecordList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.ObjectRecordList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->player_id_, deterministic, target);
  }

  // repeated .NFMsg.ObjectRecordBase record_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->record_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->record_list(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.ObjectRecordList)
  return target;
}

size_t ObjectRecordList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.ObjectRecordList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFMsg.ObjectRecordBase record_list = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->record_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->record_list(static_cast<int>(i)));
    }
  }

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->player_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectRecordList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.ObjectRecordList)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectRecordList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectRecordList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.ObjectRecordList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.ObjectRecordList)
    MergeFrom(*source);
  }
}

void ObjectRecordList::MergeFrom(const ObjectRecordList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.ObjectRecordList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  record_list_.MergeFrom(from.record_list_);
  if (from.has_player_id()) {
    mutable_player_id()->::NFMsg::Ident::MergeFrom(from.player_id());
  }
}

void ObjectRecordList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.ObjectRecordList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectRecordList::CopyFrom(const ObjectRecordList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.ObjectRecordList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectRecordList::IsInitialized() const {
  return true;
}

void ObjectRecordList::Swap(ObjectRecordList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectRecordList::InternalSwap(ObjectRecordList* other) {
  using std::swap;
  record_list_.InternalSwap(&other->record_list_);
  swap(player_id_, other->player_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectRecordList::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MultiObjectRecordList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MultiObjectRecordList::kMultiPlayerRecordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MultiObjectRecordList::MultiObjectRecordList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsMultiObjectRecordList();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.MultiObjectRecordList)
}
MultiObjectRecordList::MultiObjectRecordList(const MultiObjectRecordList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      multi_player_record_(from.multi_player_record_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:NFMsg.MultiObjectRecordList)
}

void MultiObjectRecordList::SharedCtor() {
  _cached_size_ = 0;
}

MultiObjectRecordList::~MultiObjectRecordList() {
  // @@protoc_insertion_point(destructor:NFMsg.MultiObjectRecordList)
  SharedDtor();
}

void MultiObjectRecordList::SharedDtor() {
}

void MultiObjectRecordList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MultiObjectRecordList::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MultiObjectRecordList& MultiObjectRecordList::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsMultiObjectRecordList();
  return *internal_default_instance();
}

MultiObjectRecordList* MultiObjectRecordList::New(::google::protobuf::Arena* arena) const {
  MultiObjectRecordList* n = new MultiObjectRecordList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MultiObjectRecordList::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.MultiObjectRecordList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  multi_player_record_.Clear();
  _internal_metadata_.Clear();
}

bool MultiObjectRecordList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.MultiObjectRecordList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .NFMsg.ObjectRecordList multi_player_record = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_multi_player_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.MultiObjectRecordList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.MultiObjectRecordList)
  return false;
#undef DO_
}

void MultiObjectRecordList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.MultiObjectRecordList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NFMsg.ObjectRecordList multi_player_record = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->multi_player_record_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->multi_player_record(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.MultiObjectRecordList)
}

::google::protobuf::uint8* MultiObjectRecordList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.MultiObjectRecordList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .NFMsg.ObjectRecordList multi_player_record = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->multi_player_record_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->multi_player_record(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.MultiObjectRecordList)
  return target;
}

size_t MultiObjectRecordList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.MultiObjectRecordList)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFMsg.ObjectRecordList multi_player_record = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->multi_player_record_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->multi_player_record(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MultiObjectRecordList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.MultiObjectRecordList)
  GOOGLE_DCHECK_NE(&from, this);
  const MultiObjectRecordList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MultiObjectRecordList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.MultiObjectRecordList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.MultiObjectRecordList)
    MergeFrom(*source);
  }
}

void MultiObjectRecordList::MergeFrom(const MultiObjectRecordList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.MultiObjectRecordList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  multi_player_record_.MergeFrom(from.multi_player_record_);
}

void MultiObjectRecordList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.MultiObjectRecordList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MultiObjectRecordList::CopyFrom(const MultiObjectRecordList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.MultiObjectRecordList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MultiObjectRecordList::IsInitialized() const {
  return true;
}

void MultiObjectRecordList::Swap(MultiObjectRecordList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MultiObjectRecordList::InternalSwap(MultiObjectRecordList* other) {
  using std::swap;
  multi_player_record_.InternalSwap(&other->multi_player_record_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MultiObjectRecordList::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgBase::InitAsDefaultInstance() {
  ::NFMsg::_MsgBase_default_instance_._instance.get_mutable()->player_id_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
  ::NFMsg::_MsgBase_default_instance_._instance.get_mutable()->hash_ident_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgBase::kPlayerIdFieldNumber;
const int MsgBase::kMsgDataFieldNumber;
const int MsgBase::kPlayerClientListFieldNumber;
const int MsgBase::kHashIdentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgBase::MsgBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsMsgBase();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.MsgBase)
}
MsgBase::MsgBase(const MsgBase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      player_client_list_(from.player_client_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg_data().size() > 0) {
    msg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_data_);
  }
  if (from.has_player_id()) {
    player_id_ = new ::NFMsg::Ident(*from.player_id_);
  } else {
    player_id_ = NULL;
  }
  if (from.has_hash_ident()) {
    hash_ident_ = new ::NFMsg::Ident(*from.hash_ident_);
  } else {
    hash_ident_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:NFMsg.MsgBase)
}

void MsgBase::SharedCtor() {
  msg_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hash_ident_) -
      reinterpret_cast<char*>(&player_id_)) + sizeof(hash_ident_));
  _cached_size_ = 0;
}

MsgBase::~MsgBase() {
  // @@protoc_insertion_point(destructor:NFMsg.MsgBase)
  SharedDtor();
}

void MsgBase::SharedDtor() {
  msg_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete player_id_;
  if (this != internal_default_instance()) delete hash_ident_;
}

void MsgBase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgBase::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgBase& MsgBase::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsMsgBase();
  return *internal_default_instance();
}

MsgBase* MsgBase::New(::google::protobuf::Arena* arena) const {
  MsgBase* n = new MsgBase;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgBase::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.MsgBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  player_client_list_.Clear();
  msg_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && player_id_ != NULL) {
    delete player_id_;
  }
  player_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && hash_ident_ != NULL) {
    delete hash_ident_;
  }
  hash_ident_ = NULL;
  _internal_metadata_.Clear();
}

bool MsgBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.MsgBase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFMsg.Ident player_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msg_data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msg_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .NFMsg.Ident player_Client_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_player_client_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFMsg.Ident hash_ident = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hash_ident()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.MsgBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.MsgBase)
  return false;
#undef DO_
}

void MsgBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.MsgBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_id_, output);
  }

  // bytes msg_data = 2;
  if (this->msg_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msg_data(), output);
  }

  // repeated .NFMsg.Ident player_Client_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_client_list_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->player_client_list(static_cast<int>(i)), output);
  }

  // .NFMsg.Ident hash_ident = 4;
  if (this->has_hash_ident()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->hash_ident_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.MsgBase)
}

::google::protobuf::uint8* MsgBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.MsgBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->player_id_, deterministic, target);
  }

  // bytes msg_data = 2;
  if (this->msg_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msg_data(), target);
  }

  // repeated .NFMsg.Ident player_Client_list = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->player_client_list_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->player_client_list(static_cast<int>(i)), deterministic, target);
  }

  // .NFMsg.Ident hash_ident = 4;
  if (this->has_hash_ident()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->hash_ident_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.MsgBase)
  return target;
}

size_t MsgBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.MsgBase)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .NFMsg.Ident player_Client_list = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->player_client_list_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->player_client_list(static_cast<int>(i)));
    }
  }

  // bytes msg_data = 2;
  if (this->msg_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msg_data());
  }

  // .NFMsg.Ident player_id = 1;
  if (this->has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->player_id_);
  }

  // .NFMsg.Ident hash_ident = 4;
  if (this->has_hash_ident()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hash_ident_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.MsgBase)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgBase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.MsgBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.MsgBase)
    MergeFrom(*source);
  }
}

void MsgBase::MergeFrom(const MsgBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.MsgBase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  player_client_list_.MergeFrom(from.player_client_list_);
  if (from.msg_data().size() > 0) {

    msg_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_data_);
  }
  if (from.has_player_id()) {
    mutable_player_id()->::NFMsg::Ident::MergeFrom(from.player_id());
  }
  if (from.has_hash_ident()) {
    mutable_hash_ident()->::NFMsg::Ident::MergeFrom(from.hash_ident());
  }
}

void MsgBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.MsgBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgBase::CopyFrom(const MsgBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.MsgBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBase::IsInitialized() const {
  return true;
}

void MsgBase::Swap(MsgBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgBase::InternalSwap(MsgBase* other) {
  using std::swap;
  player_client_list_.InternalSwap(&other->player_client_list_);
  msg_data_.Swap(&other->msg_data_);
  swap(player_id_, other->player_id_);
  swap(hash_ident_, other->hash_ident_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgBase::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqAckLagTest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqAckLagTest::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqAckLagTest::ReqAckLagTest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsReqAckLagTest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.ReqAckLagTest)
}
ReqAckLagTest::ReqAckLagTest(const ReqAckLagTest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:NFMsg.ReqAckLagTest)
}

void ReqAckLagTest::SharedCtor() {
  index_ = 0;
  _cached_size_ = 0;
}

ReqAckLagTest::~ReqAckLagTest() {
  // @@protoc_insertion_point(destructor:NFMsg.ReqAckLagTest)
  SharedDtor();
}

void ReqAckLagTest::SharedDtor() {
}

void ReqAckLagTest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqAckLagTest::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqAckLagTest& ReqAckLagTest::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsReqAckLagTest();
  return *internal_default_instance();
}

ReqAckLagTest* ReqAckLagTest::New(::google::protobuf::Arena* arena) const {
  ReqAckLagTest* n = new ReqAckLagTest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqAckLagTest::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.ReqAckLagTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_ = 0;
  _internal_metadata_.Clear();
}

bool ReqAckLagTest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.ReqAckLagTest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.ReqAckLagTest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.ReqAckLagTest)
  return false;
#undef DO_
}

void ReqAckLagTest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.ReqAckLagTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.ReqAckLagTest)
}

::google::protobuf::uint8* ReqAckLagTest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.ReqAckLagTest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.ReqAckLagTest)
  return target;
}

size_t ReqAckLagTest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.ReqAckLagTest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqAckLagTest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.ReqAckLagTest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqAckLagTest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqAckLagTest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.ReqAckLagTest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.ReqAckLagTest)
    MergeFrom(*source);
  }
}

void ReqAckLagTest::MergeFrom(const ReqAckLagTest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.ReqAckLagTest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index() != 0) {
    set_index(from.index());
  }
}

void ReqAckLagTest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.ReqAckLagTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqAckLagTest::CopyFrom(const ReqAckLagTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.ReqAckLagTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqAckLagTest::IsInitialized() const {
  return true;
}

void ReqAckLagTest::Swap(ReqAckLagTest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqAckLagTest::InternalSwap(ReqAckLagTest* other) {
  using std::swap;
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqAckLagTest::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReqCommand::InitAsDefaultInstance() {
  ::NFMsg::_ReqCommand_default_instance_._instance.get_mutable()->control_id_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
  ::NFMsg::_ReqCommand_default_instance_._instance.get_mutable()->command_value_object_ = const_cast< ::NFMsg::Ident*>(
      ::NFMsg::Ident::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqCommand::kControlIdFieldNumber;
const int ReqCommand::kCommandIdFieldNumber;
const int ReqCommand::kCommandStrValueFieldNumber;
const int ReqCommand::kCommandValueIntFieldNumber;
const int ReqCommand::kCommandValueFloatFieldNumber;
const int ReqCommand::kCommandValueStrFieldNumber;
const int ReqCommand::kCommandValueObjectFieldNumber;
const int ReqCommand::kRowFieldNumber;
const int ReqCommand::kColFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqCommand::ReqCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_NFMsgBase_2eproto::InitDefaultsReqCommand();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:NFMsg.ReqCommand)
}
ReqCommand::ReqCommand(const ReqCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  command_str_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.command_str_value().size() > 0) {
    command_str_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_str_value_);
  }
  command_value_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.command_value_str().size() > 0) {
    command_value_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_value_str_);
  }
  if (from.has_control_id()) {
    control_id_ = new ::NFMsg::Ident(*from.control_id_);
  } else {
    control_id_ = NULL;
  }
  if (from.has_command_value_object()) {
    command_value_object_ = new ::NFMsg::Ident(*from.command_value_object_);
  } else {
    command_value_object_ = NULL;
  }
  ::memcpy(&command_value_int_, &from.command_value_int_,
    static_cast<size_t>(reinterpret_cast<char*>(&col_) -
    reinterpret_cast<char*>(&command_value_int_)) + sizeof(col_));
  // @@protoc_insertion_point(copy_constructor:NFMsg.ReqCommand)
}

void ReqCommand::SharedCtor() {
  command_str_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_value_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&control_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&col_) -
      reinterpret_cast<char*>(&control_id_)) + sizeof(col_));
  _cached_size_ = 0;
}

ReqCommand::~ReqCommand() {
  // @@protoc_insertion_point(destructor:NFMsg.ReqCommand)
  SharedDtor();
}

void ReqCommand::SharedDtor() {
  command_str_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_value_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete control_id_;
  if (this != internal_default_instance()) delete command_value_object_;
}

void ReqCommand::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqCommand::descriptor() {
  ::protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqCommand& ReqCommand::default_instance() {
  ::protobuf_NFMsgBase_2eproto::InitDefaultsReqCommand();
  return *internal_default_instance();
}

ReqCommand* ReqCommand::New(::google::protobuf::Arena* arena) const {
  ReqCommand* n = new ReqCommand;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:NFMsg.ReqCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  command_str_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_value_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && control_id_ != NULL) {
    delete control_id_;
  }
  control_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && command_value_object_ != NULL) {
    delete command_value_object_;
  }
  command_value_object_ = NULL;
  ::memset(&command_value_int_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&col_) -
      reinterpret_cast<char*>(&command_value_int_)) + sizeof(col_));
  _internal_metadata_.Clear();
}

bool ReqCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:NFMsg.ReqCommand)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .NFMsg.Ident control_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_control_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFMsg.ReqCommand.EGameCommandType command_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_command_id(static_cast< ::NFMsg::ReqCommand_EGameCommandType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes command_str_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_command_str_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 command_value_int = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &command_value_int_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double command_value_float = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &command_value_float_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes command_value_str = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_command_value_str()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .NFMsg.Ident command_value_object = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_command_value_object()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 row = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &row_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 col = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &col_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:NFMsg.ReqCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:NFMsg.ReqCommand)
  return false;
#undef DO_
}

void ReqCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:NFMsg.ReqCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident control_id = 1;
  if (this->has_control_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->control_id_, output);
  }

  // .NFMsg.ReqCommand.EGameCommandType command_id = 2;
  if (this->command_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->command_id(), output);
  }

  // bytes command_str_value = 3;
  if (this->command_str_value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->command_str_value(), output);
  }

  // int64 command_value_int = 4;
  if (this->command_value_int() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->command_value_int(), output);
  }

  // double command_value_float = 5;
  if (this->command_value_float() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->command_value_float(), output);
  }

  // bytes command_value_str = 6;
  if (this->command_value_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->command_value_str(), output);
  }

  // .NFMsg.Ident command_value_object = 7;
  if (this->has_command_value_object()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->command_value_object_, output);
  }

  // int32 row = 8;
  if (this->row() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->row(), output);
  }

  // int32 col = 9;
  if (this->col() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->col(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:NFMsg.ReqCommand)
}

::google::protobuf::uint8* ReqCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:NFMsg.ReqCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .NFMsg.Ident control_id = 1;
  if (this->has_control_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->control_id_, deterministic, target);
  }

  // .NFMsg.ReqCommand.EGameCommandType command_id = 2;
  if (this->command_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->command_id(), target);
  }

  // bytes command_str_value = 3;
  if (this->command_str_value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->command_str_value(), target);
  }

  // int64 command_value_int = 4;
  if (this->command_value_int() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->command_value_int(), target);
  }

  // double command_value_float = 5;
  if (this->command_value_float() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->command_value_float(), target);
  }

  // bytes command_value_str = 6;
  if (this->command_value_str().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->command_value_str(), target);
  }

  // .NFMsg.Ident command_value_object = 7;
  if (this->has_command_value_object()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->command_value_object_, deterministic, target);
  }

  // int32 row = 8;
  if (this->row() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->row(), target);
  }

  // int32 col = 9;
  if (this->col() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->col(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NFMsg.ReqCommand)
  return target;
}

size_t ReqCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NFMsg.ReqCommand)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes command_str_value = 3;
  if (this->command_str_value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->command_str_value());
  }

  // bytes command_value_str = 6;
  if (this->command_value_str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->command_value_str());
  }

  // .NFMsg.Ident control_id = 1;
  if (this->has_control_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->control_id_);
  }

  // .NFMsg.Ident command_value_object = 7;
  if (this->has_command_value_object()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->command_value_object_);
  }

  // int64 command_value_int = 4;
  if (this->command_value_int() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->command_value_int());
  }

  // double command_value_float = 5;
  if (this->command_value_float() != 0) {
    total_size += 1 + 8;
  }

  // .NFMsg.ReqCommand.EGameCommandType command_id = 2;
  if (this->command_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->command_id());
  }

  // int32 row = 8;
  if (this->row() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->row());
  }

  // int32 col = 9;
  if (this->col() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->col());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:NFMsg.ReqCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:NFMsg.ReqCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:NFMsg.ReqCommand)
    MergeFrom(*source);
  }
}

void ReqCommand::MergeFrom(const ReqCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:NFMsg.ReqCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.command_str_value().size() > 0) {

    command_str_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_str_value_);
  }
  if (from.command_value_str().size() > 0) {

    command_value_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_value_str_);
  }
  if (from.has_control_id()) {
    mutable_control_id()->::NFMsg::Ident::MergeFrom(from.control_id());
  }
  if (from.has_command_value_object()) {
    mutable_command_value_object()->::NFMsg::Ident::MergeFrom(from.command_value_object());
  }
  if (from.command_value_int() != 0) {
    set_command_value_int(from.command_value_int());
  }
  if (from.command_value_float() != 0) {
    set_command_value_float(from.command_value_float());
  }
  if (from.command_id() != 0) {
    set_command_id(from.command_id());
  }
  if (from.row() != 0) {
    set_row(from.row());
  }
  if (from.col() != 0) {
    set_col(from.col());
  }
}

void ReqCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:NFMsg.ReqCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqCommand::CopyFrom(const ReqCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NFMsg.ReqCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqCommand::IsInitialized() const {
  return true;
}

void ReqCommand::Swap(ReqCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqCommand::InternalSwap(ReqCommand* other) {
  using std::swap;
  command_str_value_.Swap(&other->command_str_value_);
  command_value_str_.Swap(&other->command_value_str_);
  swap(control_id_, other->control_id_);
  swap(command_value_object_, other->command_value_object_);
  swap(command_value_int_, other->command_value_int_);
  swap(command_value_float_, other->command_value_float_);
  swap(command_id_, other->command_id_);
  swap(row_, other->row_);
  swap(col_, other->col_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqCommand::GetMetadata() const {
  protobuf_NFMsgBase_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_NFMsgBase_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace NFMsg

// @@protoc_insertion_point(global_scope)
